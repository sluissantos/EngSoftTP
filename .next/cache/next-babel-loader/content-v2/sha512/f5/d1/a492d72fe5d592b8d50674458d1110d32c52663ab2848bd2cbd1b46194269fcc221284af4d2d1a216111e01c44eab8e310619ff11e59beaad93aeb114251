{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Usuario/Desktop/EngSoftTP/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Usuario/Desktop/EngSoftTP/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\EngSoftTP\\\\src\\\\components\\\\generic-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { post, get } from \"../api-front\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport React from \"react\";\nimport { defaultStyles, form } from \"../styles\";\nimport MySnackBar from \"../components/snackBar\";\nimport { snackBarSeverity } from \"../helper\";\n\nvar GenericForm = function GenericForm(_ref) {\n  _s();\n\n  var type = _ref.type;\n  // type: \"funcionario\", \"medico\", \"paciente\"\n  var formStyle = form();\n\n  var _useState = useState(\"\"),\n      snackBarMessage = _useState[0],\n      setSnackBarMessage = _useState[1];\n\n  var _useState2 = useState(false),\n      isOpenSnackBar = _useState2[0],\n      setIsOpenSnackBar = _useState2[1];\n\n  var _useState3 = useState(snackBarSeverity.SUCCESS),\n      severitySnackBar = _useState3[0],\n      setSeveritySnackBar = _useState3[1];\n\n  var setSuccessSnackBar = function setSuccessSnackBar() {\n    setSnackBarMessage(\"Sucesso\");\n    setSeveritySnackBar(snackBarSeverity.SUCCESS);\n    setIsOpenSnackBar(true);\n  };\n\n  var setErrorSnackbar = function setErrorSnackbar() {\n    setSnackBarMessage(\"Ocorreu um erro!\");\n    setSeveritySnackBar(snackBarSeverity.ERROR);\n    setIsOpenSnackBar(true);\n  };\n\n  var handleSendClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.t0 = type;\n              _context.next = _context.t0 === \"medico\" ? 4 : _context.t0 === \"funcionario\" ? 4 : _context.t0 === \"paciente\" ? 7 : _context.t0 === \"endereco\" ? 10 : _context.t0 === \"consulta\" ? 13 : 16;\n              break;\n\n            case 4:\n              _context.next = 6;\n              return post(\"funcionario\", {\n                bairro: formBairro,\n                cep: formCep,\n                cidade: formCidade,\n                email: formEmail,\n                estado: formEstado,\n                logradouro: formLogradouro,\n                nome: formNome,\n                telefone: formTelefone,\n                data_contrato: \"\".concat(formDataInicio.getFullYear(), \"-\").concat(formDataInicio.getMonth() + 1 < 10 ? \"0\" + (formDataInicio.getMonth() + 1) : formDataInicio.getMonth() + 1, \"-\").concat(formDataInicio.getDate() < 10 ? \"0\" + formDataInicio.getDate() : formDataInicio.getDate()),\n                salario: formSalario,\n                senha_hash: formSenha,\n                crm: formCrm,\n                especialidade: formEspecialidade,\n                isMedico: isMedico\n              }).then(function () {\n                return setSuccessSnackBar();\n              })[\"catch\"](function (error) {\n                setErrorSnackbar();\n              });\n\n            case 6:\n              return _context.abrupt(\"break\", 17);\n\n            case 7:\n              _context.next = 9;\n              return post(\"paciente\", {\n                bairro: formBairro,\n                cep: formCep,\n                cidade: formCidade,\n                email: formEmail,\n                estado: formEstado,\n                logradouro: formLogradouro,\n                nome: formNome,\n                telefone: formTelefone,\n                peso: formPeso,\n                altura: formAltura.replace(\",\", \".\"),\n                tipo_sanguineo: formTipoSanguineo\n              }).then(function () {\n                return setSuccessSnackBar();\n              })[\"catch\"](function (error) {\n                setErrorSnackbar();\n              });\n\n            case 9:\n              return _context.abrupt(\"break\", 17);\n\n            case 10:\n              _context.next = 12;\n              return post(\"endereco\", {\n                bairro: formBairro,\n                cep: formCep,\n                cidade: formCidade,\n                estado: formEstado,\n                logradouro: formLogradouro\n              }).then(function () {\n                return setSuccessSnackBar();\n              })[\"catch\"](function (error) {\n                setErrorSnackbar();\n              });\n\n            case 12:\n              return _context.abrupt(\"break\", 17);\n\n            case 13:\n              _context.next = 15;\n              return post(\"agenda\", {\n                data: \"\".concat(formDataConsulta.getFullYear(), \"-\").concat(formDataConsulta.getMonth() + 1 < 10 ? \"0\" + (formDataConsulta.getMonth() + 1) : formDataConsulta.getMonth() + 1, \"-\").concat(formDataConsulta.getDate() < 10 ? \"0\" + formDataConsulta.getDate() : formDataConsulta.getDate()),\n                hora: formHoraConsulta,\n                nome: formNome,\n                email: formEmail,\n                telefone: formTelefone,\n                codigomedico: formMedico\n              }).then(function () {\n                return setSuccessSnackBar();\n              })[\"catch\"](function (error) {\n                setErrorSnackbar();\n              });\n\n            case 15:\n              return _context.abrupt(\"break\", 17);\n\n            case 16:\n              return _context.abrupt(\"break\", 17);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t1 = _context[\"catch\"](0);\n              setErrorSnackbar();\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    return function handleSendClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSetFormCep = function handleSetFormCep(value) {\n    setFormCep(value);\n\n    if (value && value.replace(\"-\", \"\").length === 8) {\n      get(\"endereco/\".concat(value.replace(\"-\", \"\"))).then(function (result) {\n        if (result && result[0]) {\n          console.log(result);\n          setFormLogradouro(result[0].logradouro);\n          setFormBairro(result[0].bairro);\n          setFormCidade(result[0].cidade);\n          setFormEstado(result[0].estado);\n        }\n      });\n    }\n  };\n\n  var handleSetIsMedico = function handleSetIsMedico(value) {\n    setIsMedico(value);\n  };\n\n  var handleSetFormSelectEspecialidade = function handleSetFormSelectEspecialidade(value) {\n    setFormSelectEspecialidade(value);\n    get(\"especialidade/medicos\", {\n      especialidade: value\n    }).then(function (result) {\n      setOptionsMedico(result);\n    });\n  };\n\n  var handleSetFormDataConsulta = function handleSetFormDataConsulta(value) {\n    setFormDataConsulta(value);\n    get(\"agenda/horarios\", {\n      codigomedico: formMedico,\n      data: \"\".concat(value.getFullYear(), \"-\").concat(value.getMonth() + 1 < 10 ? \"0\" + (value.getMonth() + 1) : value.getMonth() + 1, \"-\").concat(value.getDate() < 10 ? \"0\" + value.getDate() : value.getDate())\n    }).then(function (result) {\n      return setOptionsHour(result.map(function (value) {\n        return value.slice(0, 5);\n      }));\n    }); // busca no back as options\n  }; // states\n\n\n  var _useState4 = useState(\"\"),\n      formMedico = _useState4[0],\n      setFormMedico = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      formSelectEspecialidade = _useState5[0],\n      setFormSelectEspecialidade = _useState5[1];\n\n  var _useState6 = useState(new Date()),\n      formDataConsulta = _useState6[0],\n      setFormDataConsulta = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      formHoraConsulta = _useState7[0],\n      setFormHoraConsulta = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      formNome = _useState8[0],\n      setFormNome = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      formEmail = _useState9[0],\n      setFormEmail = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      formTelefone = _useState10[0],\n      setFormTelefone = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      formCep = _useState11[0],\n      setFormCep = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      formLogradouro = _useState12[0],\n      setFormLogradouro = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      formBairro = _useState13[0],\n      setFormBairro = _useState13[1];\n\n  var _useState14 = useState(\"\"),\n      formCidade = _useState14[0],\n      setFormCidade = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      formEstado = _useState15[0],\n      setFormEstado = _useState15[1];\n\n  var _useState16 = useState(new Date()),\n      formDataInicio = _useState16[0],\n      setFormDataInicio = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      formSalario = _useState17[0],\n      setFormSalario = _useState17[1];\n\n  var _useState18 = useState(\"\"),\n      formSenha = _useState18[0],\n      setFormSenha = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      formEspecialidade = _useState19[0],\n      setFormEspecialidade = _useState19[1];\n\n  var _useState20 = useState(\"\"),\n      formCrm = _useState20[0],\n      setFormCrm = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      formPeso = _useState21[0],\n      setFormPeso = _useState21[1];\n\n  var _useState22 = useState(\"\"),\n      formAltura = _useState22[0],\n      setFormAltura = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      formTipoSanguineo = _useState23[0],\n      setFormTipoSanguineo = _useState23[1];\n\n  var _useState24 = useState([]),\n      optionsEspecialidade = _useState24[0],\n      setOptionsEspecialidade = _useState24[1];\n\n  var _useState25 = useState([]),\n      optionsMedico = _useState25[0],\n      setOptionsMedico = _useState25[1];\n\n  var _useState26 = useState([]),\n      optionsHour = _useState26[0],\n      setOptionsHour = _useState26[1];\n\n  var _useState27 = useState(false),\n      isMedico = _useState27[0],\n      setIsMedico = _useState27[1];\n\n  useEffect(function () {\n    get(\"especialidade\").then(function (result) {\n      return setOptionsEspecialidade(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: formStyle[\"default\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: formStyle.box,\n        children: [[\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: formStyle.item,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              style: {\n                marginLeft: \"15px\"\n              },\n              className: formStyle.item,\n              children: \"Especialidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              className: formStyle.item,\n              label: \"Especialidade\",\n              id: \"demo-simple-select\",\n              value: formSelectEspecialidade,\n              onChange: function onChange(ev) {\n                handleSetFormSelectEspecialidade(ev.target.value);\n              },\n              children: optionsEspecialidade.map(function (option) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  id: option.especialidade,\n                  value: option.especialidade,\n                  children: option.especialidade\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, _this), [\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: formStyle.item,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              className: formStyle.item,\n              children: \"M\\xE9dico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              className: formStyle.item,\n              label: \"Medico\",\n              id: \"demo-simple-select\",\n              value: formMedico,\n              onChange: function onChange(ev) {\n                setFormMedico(ev.target.value);\n              },\n              children: optionsMedico.map(function (option) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  id: option.nome,\n                  value: option.codigo,\n                  children: option.nome\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 41\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, _this), [\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            style: {\n              marginBottom: \"45px\",\n              marginLeft: \"20px\"\n            },\n            disableToolbar: true,\n            variant: \"outlined\",\n            format: \"dd/MM/yyyy\",\n            id: \"date-picker-inline\",\n            label: \"Data da Consulta\",\n            value: formDataConsulta,\n            onChange: function onChange(ev) {\n              handleSetFormDataConsulta(ev);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, _this), [\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: formStyle.item,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              style: {\n                marginLeft: \"15px\"\n              },\n              className: formStyle.item,\n              children: \"Hora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              className: formStyle.item,\n              label: \"Hora\",\n              id: \"demo-simple-select\",\n              value: formHoraConsulta,\n              onChange: function onChange(ev) {\n                setFormHoraConsulta(ev.target.value);\n              },\n              children: optionsHour.map(function (option) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  id: option,\n                  value: option,\n                  children: option\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 41\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Nome\",\n            variant: \"outlined\",\n            value: formNome,\n            onChange: function onChange(ev) {\n              setFormNome(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            value: formEmail,\n            onChange: function onChange(ev) {\n              setFormEmail(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Telefone\",\n            variant: \"outlined\",\n            value: formTelefone,\n            onChange: function onChange(ev) {\n              setFormTelefone(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"CEP\",\n            variant: \"outlined\",\n            value: formCep,\n            onChange: function onChange(ev) {\n              handleSetFormCep(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Logradouro\",\n            variant: \"outlined\",\n            value: formLogradouro,\n            onChange: function onChange(ev) {\n              setFormLogradouro(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Bairro\",\n            variant: \"outlined\",\n            value: formBairro,\n            onChange: function onChange(ev) {\n              setFormBairro(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Cidade\",\n            variant: \"outlined\",\n            value: formCidade,\n            onChange: function onChange(ev) {\n              setFormCidade(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Estado\",\n            variant: \"outlined\",\n            value: formEstado,\n            onChange: function onChange(ev) {\n              setFormEstado(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: formStyle.item,\n            disableToolbar: true,\n            variant: \"outlined\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Data Inicio\",\n            value: formDataInicio,\n            onChange: function onChange(ev) {\n              setFormDataInicio(ev);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Sal\\xE1rio\",\n            variant: \"outlined\",\n            value: formSalario,\n            onChange: function onChange(ev) {\n              setFormSalario(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            type: \"password\",\n            label: \"Senha\",\n            variant: \"outlined\",\n            value: formSenha,\n            onChange: function onChange(ev) {\n              setFormSenha(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\"].includes(type) && isMedico && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Especialidade\",\n            variant: \"outlined\",\n            value: formEspecialidade,\n            onChange: function onChange(ev) {\n              setFormEspecialidade(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\"].includes(type) && isMedico && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"CRM\",\n            variant: \"outlined\",\n            value: formCrm,\n            onChange: function onChange(ev) {\n              setFormCrm(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }, _this), [\"paciente\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Peso\",\n            variant: \"outlined\",\n            value: formPeso,\n            onChange: function onChange(ev) {\n              setFormPeso(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }, _this), [\"paciente\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Altura\",\n            variant: \"outlined\",\n            value: formAltura,\n            onChange: function onChange(ev) {\n              setFormAltura(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }, _this), [\"paciente\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Tipo sangu\\xEDneo\",\n            variant: \"outlined\",\n            value: formTipoSanguineo,\n            onChange: function onChange(ev) {\n              setFormTipoSanguineo(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }, _this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: isMedico,\n              onChange: function onChange() {\n                return handleSetIsMedico(!isMedico);\n              },\n              name: \"checkedB\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 37\n            }, _this),\n            label: \"M\\xE9dico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 29\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: formStyle.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          style: {\n            marginRight: \"30px\"\n          },\n          onClick: function onClick() {},\n          children: \"Limpar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleSendClick,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MySnackBar, {\n      open: isOpenSnackBar,\n      message: snackBarMessage,\n      severity: severitySnackBar,\n      setClose: setIsOpenSnackBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(GenericForm, \"U7jnM6HcRasFG49YUy2Ran2qLA0=\");\n\n_c = GenericForm;\nexport default GenericForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenericForm\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/EngSoftTP/src/components/generic-form.js"],"names":["useEffect","useState","TextField","DateFnsUtils","MenuItem","Select","InputLabel","FormControl","Button","Switch","Checkbox","FormControlLabel","post","get","MuiPickersUtilsProvider","KeyboardDatePicker","React","defaultStyles","form","MySnackBar","snackBarSeverity","GenericForm","type","formStyle","snackBarMessage","setSnackBarMessage","isOpenSnackBar","setIsOpenSnackBar","SUCCESS","severitySnackBar","setSeveritySnackBar","setSuccessSnackBar","setErrorSnackbar","ERROR","handleSendClick","bairro","formBairro","cep","formCep","cidade","formCidade","email","formEmail","estado","formEstado","logradouro","formLogradouro","nome","formNome","telefone","formTelefone","data_contrato","formDataInicio","getFullYear","getMonth","getDate","salario","formSalario","senha_hash","formSenha","crm","formCrm","especialidade","formEspecialidade","isMedico","then","error","peso","formPeso","altura","formAltura","replace","tipo_sanguineo","formTipoSanguineo","data","formDataConsulta","hora","formHoraConsulta","codigomedico","formMedico","handleSetFormCep","value","setFormCep","length","result","console","log","setFormLogradouro","setFormBairro","setFormCidade","setFormEstado","handleSetIsMedico","setIsMedico","handleSetFormSelectEspecialidade","setFormSelectEspecialidade","setOptionsMedico","handleSetFormDataConsulta","setFormDataConsulta","setOptionsHour","map","slice","setFormMedico","formSelectEspecialidade","Date","setFormHoraConsulta","setFormNome","setFormEmail","setFormTelefone","setFormDataInicio","setFormSalario","setFormSenha","setFormEspecialidade","setFormCrm","setFormPeso","setFormAltura","setFormTipoSanguineo","optionsEspecialidade","setOptionsEspecialidade","optionsMedico","optionsHour","box","includes","item","marginLeft","ev","target","option","codigo","marginBottom","buttons","marginRight"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,cAA1B;AACA,SACIC,uBADJ,EAEIC,kBAFJ,QAGO,sBAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,WAApC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B;AACA,MAAMC,SAAS,GAAGL,IAAI,EAAtB;;AAF8B,kBAIgBjB,QAAQ,CAAC,EAAD,CAJxB;AAAA,MAIvBuB,eAJuB;AAAA,MAINC,kBAJM;;AAAA,mBAKcxB,QAAQ,CAAC,KAAD,CALtB;AAAA,MAKvByB,cALuB;AAAA,MAKPC,iBALO;;AAAA,mBAMkB1B,QAAQ,CACpDmB,gBAAgB,CAACQ,OADmC,CAN1B;AAAA,MAMvBC,gBANuB;AAAA,MAMLC,mBANK;;AAU9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7BN,IAAAA,kBAAkB,CAAC,SAAD,CAAlB;AACAK,IAAAA,mBAAmB,CAACV,gBAAgB,CAACQ,OAAlB,CAAnB;AACAD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAJD;;AAMA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BP,IAAAA,kBAAkB,CAAC,kBAAD,CAAlB;AACAK,IAAAA,mBAAmB,CAACV,gBAAgB,CAACa,KAAlB,CAAnB;AACAN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAJD;;AAMA,MAAMO,eAAe;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAERZ,IAFQ;AAAA,8CAGP,QAHO,uBAIP,aAJO,uBAkCP,UAlCO,uBAqDP,UArDO,wBAkEP,UAlEO;AAAA;;AAAA;AAAA;AAAA,qBAKFV,IAAI,CAAC,aAAD,EAAgB;AACtBuB,gBAAAA,MAAM,EAAEC,UADc;AAEtBC,gBAAAA,GAAG,EAAEC,OAFiB;AAGtBC,gBAAAA,MAAM,EAAEC,UAHc;AAItBC,gBAAAA,KAAK,EAAEC,SAJe;AAKtBC,gBAAAA,MAAM,EAAEC,UALc;AAMtBC,gBAAAA,UAAU,EAAEC,cANU;AAOtBC,gBAAAA,IAAI,EAAEC,QAPgB;AAQtBC,gBAAAA,QAAQ,EAAEC,YARY;AAStBC,gBAAAA,aAAa,YAAKC,cAAc,CAACC,WAAf,EAAL,cACTD,cAAc,CAACE,QAAf,KAA4B,CAA5B,GAAgC,EAAhC,GACM,OAAOF,cAAc,CAACE,QAAf,KAA4B,CAAnC,CADN,GAEMF,cAAc,CAACE,QAAf,KAA4B,CAHzB,cAKTF,cAAc,CAACG,OAAf,KAA2B,EAA3B,GACM,MAAMH,cAAc,CAACG,OAAf,EADZ,GAEMH,cAAc,CAACG,OAAf,EAPG,CATS;AAkBtBC,gBAAAA,OAAO,EAAEC,WAlBa;AAmBtBC,gBAAAA,UAAU,EAAEC,SAnBU;AAoBtBC,gBAAAA,GAAG,EAAEC,OApBiB;AAqBtBC,gBAAAA,aAAa,EAAEC,iBArBO;AAsBtBC,gBAAAA,QAAQ,EAAEA;AAtBY,eAAhB,CAAJ,CAwBDC,IAxBC,CAwBI;AAAA,uBAAMlC,kBAAkB,EAAxB;AAAA,eAxBJ,WAyBK,UAACmC,KAAD,EAAW;AACdlC,gBAAAA,gBAAgB;AACnB,eA3BC,CALE;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAmCFpB,IAAI,CAAC,UAAD,EAAa;AACnBuB,gBAAAA,MAAM,EAAEC,UADW;AAEnBC,gBAAAA,GAAG,EAAEC,OAFc;AAGnBC,gBAAAA,MAAM,EAAEC,UAHW;AAInBC,gBAAAA,KAAK,EAAEC,SAJY;AAKnBC,gBAAAA,MAAM,EAAEC,UALW;AAMnBC,gBAAAA,UAAU,EAAEC,cANO;AAOnBC,gBAAAA,IAAI,EAAEC,QAPa;AAQnBC,gBAAAA,QAAQ,EAAEC,YARS;AASnBiB,gBAAAA,IAAI,EAAEC,QATa;AAUnBC,gBAAAA,MAAM,EAAEC,UAAU,CAACC,OAAX,CAAmB,GAAnB,EAAwB,GAAxB,CAVW;AAWnBC,gBAAAA,cAAc,EAAEC;AAXG,eAAb,CAAJ,CAaDR,IAbC,CAaI;AAAA,uBAAMlC,kBAAkB,EAAxB;AAAA,eAbJ,WAcK,UAACmC,KAAD,EAAW;AACdlC,gBAAAA,gBAAgB;AACnB,eAhBC,CAnCE;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAsDFpB,IAAI,CAAC,UAAD,EAAa;AACnBuB,gBAAAA,MAAM,EAAEC,UADW;AAEnBC,gBAAAA,GAAG,EAAEC,OAFc;AAGnBC,gBAAAA,MAAM,EAAEC,UAHW;AAInBG,gBAAAA,MAAM,EAAEC,UAJW;AAKnBC,gBAAAA,UAAU,EAAEC;AALO,eAAb,CAAJ,CAODmB,IAPC,CAOI;AAAA,uBAAMlC,kBAAkB,EAAxB;AAAA,eAPJ,WAQK,UAACmC,KAAD,EAAW;AACdlC,gBAAAA,gBAAgB;AACnB,eAVC,CAtDE;;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAmEFpB,IAAI,CAAC,QAAD,EAAW;AACjB8D,gBAAAA,IAAI,YAAKC,gBAAgB,CAACtB,WAAjB,EAAL,cACAsB,gBAAgB,CAACrB,QAAjB,KAA8B,CAA9B,GAAkC,EAAlC,GACM,OAAOqB,gBAAgB,CAACrB,QAAjB,KAA8B,CAArC,CADN,GAEMqB,gBAAgB,CAACrB,QAAjB,KAA8B,CAHpC,cAKAqB,gBAAgB,CAACpB,OAAjB,KAA6B,EAA7B,GACM,MAAMoB,gBAAgB,CAACpB,OAAjB,EADZ,GAEMoB,gBAAgB,CAACpB,OAAjB,EAPN,CADa;AAUjBqB,gBAAAA,IAAI,EAAEC,gBAVW;AAWjB9B,gBAAAA,IAAI,EAAEC,QAXW;AAYjBP,gBAAAA,KAAK,EAAEC,SAZU;AAajBO,gBAAAA,QAAQ,EAAEC,YAbO;AAcjB4B,gBAAAA,YAAY,EAAEC;AAdG,eAAX,CAAJ,CAgBDd,IAhBC,CAgBI;AAAA,uBAAMlC,kBAAkB,EAAxB;AAAA,eAhBJ,WAiBK,UAACmC,KAAD,EAAW;AACdlC,gBAAAA,gBAAgB;AACnB,eAnBC,CAnEE;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4FhBA,cAAAA,gBAAgB;;AA5FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfE,eAAe;AAAA;AAAA;AAAA,KAArB;;AAgGA,MAAM8C,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChCC,IAAAA,UAAU,CAACD,KAAD,CAAV;;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACV,OAAN,CAAc,GAAd,EAAmB,EAAnB,EAAuBY,MAAvB,KAAkC,CAA/C,EAAkD;AAC9CtE,MAAAA,GAAG,oBAAaoE,KAAK,CAACV,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAb,EAAH,CAA0CN,IAA1C,CAA+C,UAACmB,MAAD,EAAY;AACvD,YAAIA,MAAM,IAAIA,MAAM,CAAC,CAAD,CAApB,EAAyB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAG,UAAAA,iBAAiB,CAACH,MAAM,CAAC,CAAD,CAAN,CAAUvC,UAAX,CAAjB;AACA2C,UAAAA,aAAa,CAACJ,MAAM,CAAC,CAAD,CAAN,CAAUjD,MAAX,CAAb;AACAsD,UAAAA,aAAa,CAACL,MAAM,CAAC,CAAD,CAAN,CAAU7C,MAAX,CAAb;AACAmD,UAAAA,aAAa,CAACN,MAAM,CAAC,CAAD,CAAN,CAAUzC,MAAX,CAAb;AACH;AACJ,OARD;AASH;AACJ,GAbD;;AAeA,MAAMgD,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,KAAD,EAAW;AACjCW,IAAAA,WAAW,CAACX,KAAD,CAAX;AACH,GAFD;;AAIA,MAAMY,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACZ,KAAD,EAAW;AAChDa,IAAAA,0BAA0B,CAACb,KAAD,CAA1B;AACApE,IAAAA,GAAG,CAAC,uBAAD,EAA0B;AAAEiD,MAAAA,aAAa,EAAEmB;AAAjB,KAA1B,CAAH,CAAuDhB,IAAvD,CACI,UAACmB,MAAD,EAAY;AACRW,MAAAA,gBAAgB,CAACX,MAAD,CAAhB;AACH,KAHL;AAKH,GAPD;;AASA,MAAMY,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACf,KAAD,EAAW;AACzCgB,IAAAA,mBAAmB,CAAChB,KAAD,CAAnB;AACApE,IAAAA,GAAG,CAAC,iBAAD,EAAoB;AACnBiE,MAAAA,YAAY,EAAEC,UADK;AAEnBL,MAAAA,IAAI,YAAKO,KAAK,CAAC5B,WAAN,EAAL,cACA4B,KAAK,CAAC3B,QAAN,KAAmB,CAAnB,GAAuB,EAAvB,GACM,OAAO2B,KAAK,CAAC3B,QAAN,KAAmB,CAA1B,CADN,GAEM2B,KAAK,CAAC3B,QAAN,KAAmB,CAHzB,cAKA2B,KAAK,CAAC1B,OAAN,KAAkB,EAAlB,GAAuB,MAAM0B,KAAK,CAAC1B,OAAN,EAA7B,GAA+C0B,KAAK,CAAC1B,OAAN,EAL/C;AAFe,KAApB,CAAH,CASGU,IATH,CASQ,UAACmB,MAAD;AAAA,aACJc,cAAc,CAACd,MAAM,CAACe,GAAP,CAAW,UAAClB,KAAD;AAAA,eAAWA,KAAK,CAACmB,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAX;AAAA,OAAX,CAAD,CADV;AAAA,KATR,EAFyC,CAczC;AACH,GAfD,CAlJ8B,CAmK9B;;;AAnK8B,mBAoKMnG,QAAQ,CAAC,EAAD,CApKd;AAAA,MAoKvB8E,UApKuB;AAAA,MAoKXsB,aApKW;;AAAA,mBAqKgCpG,QAAQ,CAAC,EAAD,CArKxC;AAAA,MAqKvBqG,uBArKuB;AAAA,MAqKER,0BArKF;;AAAA,mBAsKkB7F,QAAQ,CAAC,IAAIsG,IAAJ,EAAD,CAtK1B;AAAA,MAsKvB5B,gBAtKuB;AAAA,MAsKLsB,mBAtKK;;AAAA,mBAuKkBhG,QAAQ,CAAC,EAAD,CAvK1B;AAAA,MAuKvB4E,gBAvKuB;AAAA,MAuKL2B,mBAvKK;;AAAA,mBAwKEvG,QAAQ,CAAC,EAAD,CAxKV;AAAA,MAwKvB+C,QAxKuB;AAAA,MAwKbyD,WAxKa;;AAAA,mBAyKIxG,QAAQ,CAAC,EAAD,CAzKZ;AAAA,MAyKvByC,SAzKuB;AAAA,MAyKZgE,YAzKY;;AAAA,oBA0KUzG,QAAQ,CAAC,EAAD,CA1KlB;AAAA,MA0KvBiD,YA1KuB;AAAA,MA0KTyD,eA1KS;;AAAA,oBA2KA1G,QAAQ,CAAC,EAAD,CA3KR;AAAA,MA2KvBqC,OA3KuB;AAAA,MA2Kd4C,UA3Kc;;AAAA,oBA4KcjF,QAAQ,CAAC,EAAD,CA5KtB;AAAA,MA4KvB6C,cA5KuB;AAAA,MA4KPyC,iBA5KO;;AAAA,oBA6KMtF,QAAQ,CAAC,EAAD,CA7Kd;AAAA,MA6KvBmC,UA7KuB;AAAA,MA6KXoD,aA7KW;;AAAA,oBA8KMvF,QAAQ,CAAC,EAAD,CA9Kd;AAAA,MA8KvBuC,UA9KuB;AAAA,MA8KXiD,aA9KW;;AAAA,oBA+KMxF,QAAQ,CAAC,EAAD,CA/Kd;AAAA,MA+KvB2C,UA/KuB;AAAA,MA+KX8C,aA/KW;;AAAA,oBAgLczF,QAAQ,CAAC,IAAIsG,IAAJ,EAAD,CAhLtB;AAAA,MAgLvBnD,cAhLuB;AAAA,MAgLPwD,iBAhLO;;AAAA,oBAiLQ3G,QAAQ,CAAC,EAAD,CAjLhB;AAAA,MAiLvBwD,WAjLuB;AAAA,MAiLVoD,cAjLU;;AAAA,oBAkLI5G,QAAQ,CAAC,EAAD,CAlLZ;AAAA,MAkLvB0D,SAlLuB;AAAA,MAkLZmD,YAlLY;;AAAA,oBAmLoB7G,QAAQ,CAAC,EAAD,CAnL5B;AAAA,MAmLvB8D,iBAnLuB;AAAA,MAmLJgD,oBAnLI;;AAAA,oBAoLA9G,QAAQ,CAAC,EAAD,CApLR;AAAA,MAoLvB4D,OApLuB;AAAA,MAoLdmD,UApLc;;AAAA,oBAqLE/G,QAAQ,CAAC,EAAD,CArLV;AAAA,MAqLvBmE,QArLuB;AAAA,MAqLb6C,WArLa;;AAAA,oBAsLMhH,QAAQ,CAAC,EAAD,CAtLd;AAAA,MAsLvBqE,UAtLuB;AAAA,MAsLX4C,aAtLW;;AAAA,oBAuLoBjH,QAAQ,CAAC,EAAD,CAvL5B;AAAA,MAuLvBwE,iBAvLuB;AAAA,MAuLJ0C,oBAvLI;;AAAA,oBAwL0BlH,QAAQ,CAAC,EAAD,CAxLlC;AAAA,MAwLvBmH,oBAxLuB;AAAA,MAwLDC,uBAxLC;;AAAA,oBAyLYpH,QAAQ,CAAC,EAAD,CAzLpB;AAAA,MAyLvBqH,aAzLuB;AAAA,MAyLRvB,gBAzLQ;;AAAA,oBA0LQ9F,QAAQ,CAAC,EAAD,CA1LhB;AAAA,MA0LvBsH,WA1LuB;AAAA,MA0LVrB,cA1LU;;AAAA,oBA2LEjG,QAAQ,CAAC,KAAD,CA3LV;AAAA,MA2LvB+D,QA3LuB;AAAA,MA2Lb4B,WA3La;;AA6L9B5F,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,GAAG,CAAC,eAAD,CAAH,CAAqBoD,IAArB,CAA0B,UAACmB,MAAD;AAAA,aAAYiC,uBAAuB,CAACjC,MAAD,CAAnC;AAAA,KAA1B;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAE7D,SAAS,WAAzB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEA,SAAS,CAACiG,GAA1B;AAAA,mBACK,CAAC,UAAD,EAAaC,QAAb,CAAsBnG,IAAtB,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IAAlC;AAAA,oCACI,QAAC,UAAD;AACI,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eADX;AAEI,cAAA,SAAS,EAAEpG,SAAS,CAACmG,IAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAOI,QAAC,MAAD;AACI,cAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,cAAA,KAAK,EAAC,eAFV;AAGI,cAAA,EAAE,EAAC,oBAHP;AAII,cAAA,KAAK,EAAEpB,uBAJX;AAKI,cAAA,QAAQ,EAAE,kBAACsB,EAAD,EAAQ;AACd/B,gBAAAA,gCAAgC,CAC5B+B,EAAE,CAACC,MAAH,CAAU5C,KADkB,CAAhC;AAGH,eATL;AAAA,wBAWKmC,oBAAoB,CAACjB,GAArB,CAAyB,UAAC2B,MAAD;AAAA,oCACtB,QAAC,QAAD;AACI,kBAAA,EAAE,EAAEA,MAAM,CAAChE,aADf;AAEI,kBAAA,KAAK,EAAEgE,MAAM,CAAChE,aAFlB;AAAA,4BAIKgE,MAAM,CAAChE;AAJZ;AAAA;AAAA;AAAA;AAAA,yBADsB;AAAA,eAAzB;AAXL;AAAA;AAAA;AAAA;AAAA,qBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAFR,EAiCK,CAAC,UAAD,EAAa2D,QAAb,CAAsBnG,IAAtB,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IAAlC;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEnG,SAAS,CAACmG,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAII,QAAC,MAAD;AACI,cAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,cAAA,KAAK,EAAC,QAFV;AAGI,cAAA,EAAE,EAAC,oBAHP;AAII,cAAA,KAAK,EAAE3C,UAJX;AAKI,cAAA,QAAQ,EAAE,kBAAC6C,EAAD,EAAQ;AACdvB,gBAAAA,aAAa,CAACuB,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAb;AACH,eAPL;AAAA,wBASKqC,aAAa,CAACnB,GAAd,CAAkB,UAAC2B,MAAD;AAAA,oCACf,QAAC,QAAD;AACI,kBAAA,EAAE,EAAEA,MAAM,CAAC/E,IADf;AAEI,kBAAA,KAAK,EAAE+E,MAAM,CAACC,MAFlB;AAAA,4BAIKD,MAAM,CAAC/E;AAJZ;AAAA;AAAA;AAAA;AAAA,yBADe;AAAA,eAAlB;AATL;AAAA;AAAA;AAAA;AAAA,qBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAlCR,EA4DK,CAAC,UAAD,EAAa0E,QAAb,CAAsBnG,IAAtB,kBACG,QAAC,uBAAD;AAAyB,UAAA,KAAK,EAAEnB,YAAhC;AAAA,iCACI,QAAC,kBAAD;AACI,YAAA,KAAK,EAAE;AACH6H,cAAAA,YAAY,EAAE,MADX;AAEHL,cAAAA,UAAU,EAAE;AAFT,aADX;AAKI,YAAA,cAAc,MALlB;AAMI,YAAA,OAAO,EAAC,UANZ;AAOI,YAAA,MAAM,EAAC,YAPX;AAQI,YAAA,EAAE,EAAC,oBARP;AASI,YAAA,KAAK,EAAC,kBATV;AAUI,YAAA,KAAK,EAAEhD,gBAVX;AAWI,YAAA,QAAQ,EAAE,kBAACiD,EAAD,EAAQ;AACd5B,cAAAA,yBAAyB,CAAC4B,EAAD,CAAzB;AACH;AAbL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7DR,EA+EK,CAAC,UAAD,EAAaH,QAAb,CAAsBnG,IAAtB,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IAAlC;AAAA,oCACI,QAAC,UAAD;AACI,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eADX;AAEI,cAAA,SAAS,EAAEpG,SAAS,CAACmG,IAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAOI,QAAC,MAAD;AACI,cAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,cAAA,KAAK,EAAC,MAFV;AAGI,cAAA,EAAE,EAAC,oBAHP;AAII,cAAA,KAAK,EAAE7C,gBAJX;AAKI,cAAA,QAAQ,EAAE,kBAAC+C,EAAD,EAAQ;AACdpB,gBAAAA,mBAAmB,CAACoB,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAnB;AACH,eAPL;AAAA,wBASKsC,WAAW,CAACpB,GAAZ,CAAgB,UAAC2B,MAAD;AAAA,oCACb,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAEA,MAAd;AAAsB,kBAAA,KAAK,EAAEA,MAA7B;AAAA,4BACKA;AADL;AAAA;AAAA;AAAA;AAAA,yBADa;AAAA,eAAhB;AATL;AAAA;AAAA;AAAA;AAAA,qBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAhFR,EA0GK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDL,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,MAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAE1E,QALX;AAMI,YAAA,QAAQ,EAAE,kBAAC4E,EAAD,EAAQ;AACdnB,cAAAA,WAAW,CAACmB,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAX;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7GR,EA0HK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,OAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEhF,SALX;AAMI,YAAA,QAAQ,EAAE,kBAACkF,EAAD,EAAQ;AACdlB,cAAAA,YAAY,CAACkB,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAZ;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7HR,EA0IK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,UAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAExE,YALX;AAMI,YAAA,QAAQ,EAAE,kBAAC0E,EAAD,EAAQ;AACdjB,cAAAA,eAAe,CAACiB,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAf;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7IR,EA0JK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,KAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEpF,OALX;AAMI,YAAA,QAAQ,EAAE,kBAACsF,EAAD,EAAQ;AACd5C,cAAAA,gBAAgB,CAAC4C,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAhB;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7JR,EA0KK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,YAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAE5E,cALX;AAMI,YAAA,QAAQ,EAAE,kBAAC8E,EAAD,EAAQ;AACdrC,cAAAA,iBAAiB,CAACqC,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAjB;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7KR,EA0LK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,QAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEtF,UALX;AAMI,YAAA,QAAQ,EAAE,kBAACwF,EAAD,EAAQ;AACdpC,cAAAA,aAAa,CAACoC,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAb;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7LR,EA0MK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,QAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAElF,UALX;AAMI,YAAA,QAAQ,EAAE,kBAACoF,EAAD,EAAQ;AACdnC,cAAAA,aAAa,CAACmC,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAb;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7MR,EA0NK,CAAC,aAAD,EAAgB,QAAhB,EAA0B,UAA1B,EAAsC,UAAtC,EAAkDwC,QAAlD,CACGnG,IADH,kBAGG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,QAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAE9E,UALX;AAMI,YAAA,QAAQ,EAAE,kBAACgF,EAAD,EAAQ;AACdlC,cAAAA,aAAa,CAACkC,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAb;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA7NR,EA0OK,CAAC,aAAD,EAAgB,QAAhB,EAA0BwC,QAA1B,CAAmCnG,IAAnC,kBACG,QAAC,uBAAD;AAAyB,UAAA,KAAK,EAAEnB,YAAhC;AAAA,iCACI,QAAC,kBAAD;AACI,YAAA,SAAS,EAAEoB,SAAS,CAACmG,IADzB;AAEI,YAAA,cAAc,MAFlB;AAGI,YAAA,OAAO,EAAC,UAHZ;AAII,YAAA,MAAM,EAAC,YAJX;AAKI,YAAA,MAAM,EAAC,QALX;AAMI,YAAA,EAAE,EAAC,oBANP;AAOI,YAAA,KAAK,EAAC,aAPV;AAQI,YAAA,KAAK,EAAEtE,cARX;AASI,YAAA,QAAQ,EAAE,kBAACwE,EAAD,EAAQ;AACdhB,cAAAA,iBAAiB,CAACgB,EAAD,CAAjB;AACH;AAXL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA3OR,EA2PK,CAAC,aAAD,EAAgB,QAAhB,EAA0BH,QAA1B,CAAmCnG,IAAnC,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,YAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEjE,WALX;AAMI,YAAA,QAAQ,EAAE,kBAACmE,EAAD,EAAQ;AACdf,cAAAA,cAAc,CAACe,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAd;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA5PR,EAyQK,CAAC,aAAD,EAAgB,QAAhB,EAA0BwC,QAA1B,CAAmCnG,IAAnC,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,IAAI,EAAC,UAHT;AAII,YAAA,KAAK,EAAC,OAJV;AAKI,YAAA,OAAO,EAAC,UALZ;AAMI,YAAA,KAAK,EAAE/D,SANX;AAOI,YAAA,QAAQ,EAAE,kBAACiE,EAAD,EAAQ;AACdd,cAAAA,YAAY,CAACc,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAZ;AACH;AATL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA1QR,EAwRK,CAAC,aAAD,EAAgB,QAAhB,EAA0BwC,QAA1B,CAAmCnG,IAAnC,KAA4C0C,QAA5C,iBACG;AAAK,UAAA,SAAS,EAAEzC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,eAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAE3D,iBALX;AAMI,YAAA,QAAQ,EAAE,kBAAC6D,EAAD,EAAQ;AACdb,cAAAA,oBAAoB,CAACa,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAApB;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAzRR,EAsSK,CAAC,aAAD,EAAgB,QAAhB,EAA0BwC,QAA1B,CAAmCnG,IAAnC,KAA4C0C,QAA5C,iBACG;AAAK,UAAA,SAAS,EAAEzC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,KAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAE7D,OALX;AAMI,YAAA,QAAQ,EAAE,kBAAC+D,EAAD,EAAQ;AACdZ,cAAAA,UAAU,CAACY,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAV;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAvSR,EAoTK,CAAC,UAAD,EAAawC,QAAb,CAAsBnG,IAAtB,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,MAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEtD,QALX;AAMI,YAAA,QAAQ,EAAE,kBAACwD,EAAD,EAAQ;AACdX,cAAAA,WAAW,CAACW,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAX;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBArTR,EAkUK,CAAC,UAAD,EAAawC,QAAb,CAAsBnG,IAAtB,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,QAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEpD,UALX;AAMI,YAAA,QAAQ,EAAE,kBAACsD,EAAD,EAAQ;AACdV,cAAAA,aAAa,CAACU,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAAb;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAnUR,EAgVK,CAAC,UAAD,EAAawC,QAAb,CAAsBnG,IAAtB,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,SAAD;AACI,YAAA,SAAS,EAAEnG,SAAS,CAACmG,IADzB;AAEI,YAAA,EAAE,EAAC,gBAFP;AAGI,YAAA,KAAK,EAAC,mBAHV;AAII,YAAA,OAAO,EAAC,UAJZ;AAKI,YAAA,KAAK,EAAEjD,iBALX;AAMI,YAAA,QAAQ,EAAE,kBAACmD,EAAD,EAAQ;AACdT,cAAAA,oBAAoB,CAACS,EAAE,CAACC,MAAH,CAAU5C,KAAX,CAApB;AACH;AARL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBAjVR,EA8VK,CAAC,aAAD,EAAgB,QAAhB,EAA0BwC,QAA1B,CAAmCnG,IAAnC,kBACG;AAAK,UAAA,SAAS,EAAEC,SAAS,CAACmG,IAA1B;AAAA,iCACI,QAAC,gBAAD;AACI,YAAA,OAAO,eACH,QAAC,QAAD;AACI,cAAA,OAAO,EAAE1D,QADb;AAEI,cAAA,QAAQ,EAAE;AAAA,uBACN2B,iBAAiB,CAAC,CAAC3B,QAAF,CADX;AAAA,eAFd;AAKI,cAAA,IAAI,EAAC,UALT;AAMI,cAAA,KAAK,EAAC;AANV;AAAA;AAAA;AAAA;AAAA,qBAFR;AAWI,YAAA,KAAK,EAAC;AAXV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,iBA/VR;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAiXI;AAAK,QAAA,SAAS,EAAEzC,SAAS,CAAC0G,OAA1B;AAAA,gCACI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,UADZ;AAEI,UAAA,KAAK,EAAE;AAAEC,YAAAA,WAAW,EAAE;AAAf,WAFX;AAGI,UAAA,OAAO,EAAE,mBAAM,CAAE,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAQI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,OAAO,EAAEhG,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAjXJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eA+XI,QAAC,UAAD;AACI,MAAA,IAAI,EAAER,cADV;AAEI,MAAA,OAAO,EAAEF,eAFb;AAGI,MAAA,QAAQ,EAAEK,gBAHd;AAII,MAAA,QAAQ,EAAEF;AAJd;AAAA;AAAA;AAAA;AAAA,aA/XJ;AAAA,kBADJ;AAwYH,CAzkBD;;GAAMN,W;;KAAAA,W;AA2kBN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { post, get } from \"../api-front\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport React from \"react\";\r\nimport { defaultStyles, form } from \"../styles\";\r\nimport MySnackBar from \"../components/snackBar\";\r\nimport { snackBarSeverity } from \"../helper\";\r\n\r\nconst GenericForm = ({ type }) => {\r\n    // type: \"funcionario\", \"medico\", \"paciente\"\r\n    const formStyle = form();\r\n\r\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\r\n    const [isOpenSnackBar, setIsOpenSnackBar] = useState(false);\r\n    const [severitySnackBar, setSeveritySnackBar] = useState(\r\n        snackBarSeverity.SUCCESS\r\n    );\r\n\r\n    const setSuccessSnackBar = () => {\r\n        setSnackBarMessage(\"Sucesso\");\r\n        setSeveritySnackBar(snackBarSeverity.SUCCESS);\r\n        setIsOpenSnackBar(true);\r\n    };\r\n\r\n    const setErrorSnackbar = () => {\r\n        setSnackBarMessage(\"Ocorreu um erro!\");\r\n        setSeveritySnackBar(snackBarSeverity.ERROR);\r\n        setIsOpenSnackBar(true);\r\n    };\r\n\r\n    const handleSendClick = async () => {\r\n        try {\r\n            switch (type) {\r\n                case \"medico\":\r\n                case \"funcionario\":\r\n                    await post(\"funcionario\", {\r\n                        bairro: formBairro,\r\n                        cep: formCep,\r\n                        cidade: formCidade,\r\n                        email: formEmail,\r\n                        estado: formEstado,\r\n                        logradouro: formLogradouro,\r\n                        nome: formNome,\r\n                        telefone: formTelefone,\r\n                        data_contrato: `${formDataInicio.getFullYear()}-${\r\n                            formDataInicio.getMonth() + 1 < 10\r\n                                ? \"0\" + (formDataInicio.getMonth() + 1)\r\n                                : formDataInicio.getMonth() + 1\r\n                        }-${\r\n                            formDataInicio.getDate() < 10\r\n                                ? \"0\" + formDataInicio.getDate()\r\n                                : formDataInicio.getDate()\r\n                        }`,\r\n                        salario: formSalario,\r\n                        senha_hash: formSenha,\r\n                        crm: formCrm,\r\n                        especialidade: formEspecialidade,\r\n                        isMedico: isMedico,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                case \"paciente\":\r\n                    await post(\"paciente\", {\r\n                        bairro: formBairro,\r\n                        cep: formCep,\r\n                        cidade: formCidade,\r\n                        email: formEmail,\r\n                        estado: formEstado,\r\n                        logradouro: formLogradouro,\r\n                        nome: formNome,\r\n                        telefone: formTelefone,\r\n                        peso: formPeso,\r\n                        altura: formAltura.replace(\",\", \".\"),\r\n                        tipo_sanguineo: formTipoSanguineo,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                case \"endereco\":\r\n                    await post(\"endereco\", {\r\n                        bairro: formBairro,\r\n                        cep: formCep,\r\n                        cidade: formCidade,\r\n                        estado: formEstado,\r\n                        logradouro: formLogradouro,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                case \"consulta\":\r\n                    await post(\"agenda\", {\r\n                        data: `${formDataConsulta.getFullYear()}-${\r\n                            formDataConsulta.getMonth() + 1 < 10\r\n                                ? \"0\" + (formDataConsulta.getMonth() + 1)\r\n                                : formDataConsulta.getMonth() + 1\r\n                        }-${\r\n                            formDataConsulta.getDate() < 10\r\n                                ? \"0\" + formDataConsulta.getDate()\r\n                                : formDataConsulta.getDate()\r\n                        }`,\r\n                        hora: formHoraConsulta,\r\n                        nome: formNome,\r\n                        email: formEmail,\r\n                        telefone: formTelefone,\r\n                        codigomedico: formMedico,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } catch (ex) {\r\n            setErrorSnackbar();\r\n        }\r\n    };\r\n\r\n    const handleSetFormCep = (value) => {\r\n        setFormCep(value);\r\n        if (value && value.replace(\"-\", \"\").length === 8) {\r\n            get(`endereco/${value.replace(\"-\", \"\")}`).then((result) => {\r\n                if (result && result[0]) {\r\n                    console.log(result);\r\n                    setFormLogradouro(result[0].logradouro);\r\n                    setFormBairro(result[0].bairro);\r\n                    setFormCidade(result[0].cidade);\r\n                    setFormEstado(result[0].estado);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSetIsMedico = (value) => {\r\n        setIsMedico(value);\r\n    };\r\n\r\n    const handleSetFormSelectEspecialidade = (value) => {\r\n        setFormSelectEspecialidade(value);\r\n        get(\"especialidade/medicos\", { especialidade: value }).then(\r\n            (result) => {\r\n                setOptionsMedico(result);\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleSetFormDataConsulta = (value) => {\r\n        setFormDataConsulta(value);\r\n        get(\"agenda/horarios\", {\r\n            codigomedico: formMedico,\r\n            data: `${value.getFullYear()}-${\r\n                value.getMonth() + 1 < 10\r\n                    ? \"0\" + (value.getMonth() + 1)\r\n                    : value.getMonth() + 1\r\n            }-${\r\n                value.getDate() < 10 ? \"0\" + value.getDate() : value.getDate()\r\n            }`,\r\n        }).then((result) =>\r\n            setOptionsHour(result.map((value) => value.slice(0, 5)))\r\n        );\r\n        // busca no back as options\r\n    };\r\n\r\n    // states\r\n    const [formMedico, setFormMedico] = useState(\"\");\r\n    const [formSelectEspecialidade, setFormSelectEspecialidade] = useState(\"\");\r\n    const [formDataConsulta, setFormDataConsulta] = useState(new Date());\r\n    const [formHoraConsulta, setFormHoraConsulta] = useState(\"\");\r\n    const [formNome, setFormNome] = useState(\"\");\r\n    const [formEmail, setFormEmail] = useState(\"\");\r\n    const [formTelefone, setFormTelefone] = useState(\"\");\r\n    const [formCep, setFormCep] = useState(\"\");\r\n    const [formLogradouro, setFormLogradouro] = useState(\"\");\r\n    const [formBairro, setFormBairro] = useState(\"\");\r\n    const [formCidade, setFormCidade] = useState(\"\");\r\n    const [formEstado, setFormEstado] = useState(\"\");\r\n    const [formDataInicio, setFormDataInicio] = useState(new Date());\r\n    const [formSalario, setFormSalario] = useState(\"\");\r\n    const [formSenha, setFormSenha] = useState(\"\");\r\n    const [formEspecialidade, setFormEspecialidade] = useState(\"\");\r\n    const [formCrm, setFormCrm] = useState(\"\");\r\n    const [formPeso, setFormPeso] = useState(\"\");\r\n    const [formAltura, setFormAltura] = useState(\"\");\r\n    const [formTipoSanguineo, setFormTipoSanguineo] = useState(\"\");\r\n    const [optionsEspecialidade, setOptionsEspecialidade] = useState([]);\r\n    const [optionsMedico, setOptionsMedico] = useState([]);\r\n    const [optionsHour, setOptionsHour] = useState([]);\r\n    const [isMedico, setIsMedico] = useState(false);\r\n\r\n    useEffect(() => {\r\n        get(\"especialidade\").then((result) => setOptionsEspecialidade(result));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={formStyle.default}>\r\n                <div className={formStyle.box}>\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControl className={formStyle.item}>\r\n                                <InputLabel\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className={formStyle.item}\r\n                                >\r\n                                    Especialidade\r\n                                </InputLabel>\r\n                                <Select\r\n                                    className={formStyle.item}\r\n                                    label=\"Especialidade\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={formSelectEspecialidade}\r\n                                    onChange={(ev) => {\r\n                                        handleSetFormSelectEspecialidade(\r\n                                            ev.target.value\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    {optionsEspecialidade.map((option) => (\r\n                                        <MenuItem\r\n                                            id={option.especialidade}\r\n                                            value={option.especialidade}\r\n                                        >\r\n                                            {option.especialidade}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControl className={formStyle.item}>\r\n                                <InputLabel className={formStyle.item}>\r\n                                    Médico\r\n                                </InputLabel>\r\n                                <Select\r\n                                    className={formStyle.item}\r\n                                    label=\"Medico\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={formMedico}\r\n                                    onChange={(ev) => {\r\n                                        setFormMedico(ev.target.value);\r\n                                    }}\r\n                                >\r\n                                    {optionsMedico.map((option) => (\r\n                                        <MenuItem\r\n                                            id={option.nome}\r\n                                            value={option.codigo}\r\n                                        >\r\n                                            {option.nome}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                    marginBottom: \"45px\",\r\n                                    marginLeft: \"20px\",\r\n                                }}\r\n                                disableToolbar\r\n                                variant=\"outlined\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Data da Consulta\"\r\n                                value={formDataConsulta}\r\n                                onChange={(ev) => {\r\n                                    handleSetFormDataConsulta(ev);\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    )}\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControl className={formStyle.item}>\r\n                                <InputLabel\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className={formStyle.item}\r\n                                >\r\n                                    Hora\r\n                                </InputLabel>\r\n                                <Select\r\n                                    className={formStyle.item}\r\n                                    label=\"Hora\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={formHoraConsulta}\r\n                                    onChange={(ev) => {\r\n                                        setFormHoraConsulta(ev.target.value);\r\n                                    }}\r\n                                >\r\n                                    {optionsHour.map((option) => (\r\n                                        <MenuItem id={option} value={option}>\r\n                                            {option}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Nome\"\r\n                                variant=\"outlined\"\r\n                                value={formNome}\r\n                                onChange={(ev) => {\r\n                                    setFormNome(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                value={formEmail}\r\n                                onChange={(ev) => {\r\n                                    setFormEmail(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Telefone\"\r\n                                variant=\"outlined\"\r\n                                value={formTelefone}\r\n                                onChange={(ev) => {\r\n                                    setFormTelefone(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"CEP\"\r\n                                variant=\"outlined\"\r\n                                value={formCep}\r\n                                onChange={(ev) => {\r\n                                    handleSetFormCep(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Logradouro\"\r\n                                variant=\"outlined\"\r\n                                value={formLogradouro}\r\n                                onChange={(ev) => {\r\n                                    setFormLogradouro(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bairro\"\r\n                                variant=\"outlined\"\r\n                                value={formBairro}\r\n                                onChange={(ev) => {\r\n                                    setFormBairro(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Cidade\"\r\n                                variant=\"outlined\"\r\n                                value={formCidade}\r\n                                onChange={(ev) => {\r\n                                    setFormCidade(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Estado\"\r\n                                variant=\"outlined\"\r\n                                value={formEstado}\r\n                                onChange={(ev) => {\r\n                                    setFormEstado(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                className={formStyle.item}\r\n                                disableToolbar\r\n                                variant=\"outlined\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Data Inicio\"\r\n                                value={formDataInicio}\r\n                                onChange={(ev) => {\r\n                                    setFormDataInicio(ev);\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Salário\"\r\n                                variant=\"outlined\"\r\n                                value={formSalario}\r\n                                onChange={(ev) => {\r\n                                    setFormSalario(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                type=\"password\"\r\n                                label=\"Senha\"\r\n                                variant=\"outlined\"\r\n                                value={formSenha}\r\n                                onChange={(ev) => {\r\n                                    setFormSenha(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && isMedico && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Especialidade\"\r\n                                variant=\"outlined\"\r\n                                value={formEspecialidade}\r\n                                onChange={(ev) => {\r\n                                    setFormEspecialidade(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && isMedico && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"CRM\"\r\n                                variant=\"outlined\"\r\n                                value={formCrm}\r\n                                onChange={(ev) => {\r\n                                    setFormCrm(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"paciente\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Peso\"\r\n                                variant=\"outlined\"\r\n                                value={formPeso}\r\n                                onChange={(ev) => {\r\n                                    setFormPeso(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"paciente\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Altura\"\r\n                                variant=\"outlined\"\r\n                                value={formAltura}\r\n                                onChange={(ev) => {\r\n                                    setFormAltura(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"paciente\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Tipo sanguíneo\"\r\n                                variant=\"outlined\"\r\n                                value={formTipoSanguineo}\r\n                                onChange={(ev) => {\r\n                                    setFormTipoSanguineo(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={isMedico}\r\n                                        onChange={() =>\r\n                                            handleSetIsMedico(!isMedico)\r\n                                        }\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Médico\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className={formStyle.buttons}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: \"30px\" }}\r\n                        onClick={() => {}}\r\n                    >\r\n                        Limpar\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={handleSendClick}>\r\n                        Enviar\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <MySnackBar\r\n                open={isOpenSnackBar}\r\n                message={snackBarMessage}\r\n                severity={severitySnackBar}\r\n                setClose={setIsOpenSnackBar}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GenericForm;\r\n"]},"metadata":{},"sourceType":"module"}