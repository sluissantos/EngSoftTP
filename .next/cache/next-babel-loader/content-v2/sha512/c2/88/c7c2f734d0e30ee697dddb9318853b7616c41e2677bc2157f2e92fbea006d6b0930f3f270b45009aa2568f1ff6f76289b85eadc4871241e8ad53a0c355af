{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\EngSoftTP\\\\src\\\\components\\\\generic-list.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { get, post } from \"../api-front\";\n\nvar GenericList = function GenericList(_ref) {\n  _s();\n\n  var type = _ref.type,\n      medicoCode = _ref.medicoCode;\n\n  var _useState = useState([]),\n      tableRows = _useState[0],\n      setTableRows = _useState[1];\n\n  var parseRows = function parseRows(rows, type) {\n    console.log(rows);\n    return rows.map(function (row) {\n      return {\n        nome: row.nome ? row.nome : \"\",\n        email: row.email ? row.email : \"\",\n        telefone: row.telefone ? row.telefone : \"\",\n        cep: row.cep ? row.cep : \"\",\n        logradouro: row.logradouro ? row.logradouro : \"\",\n        bairro: row.bairro ? row.bairro : \"\",\n        cidade: row.cidade ? row.cidade : \"\",\n        estado: row.estado ? row.estado : \"\",\n        dataInicio: row.data_contrato ? \"\".concat(new Date(row.data_contrato).getFullYear(), \"-\").concat(new Date(row.data_contrato).getMonth() + 1 < 10 ? \"0\" + (new Date(row.data_contrato).getMonth() + 1) : new Date(row.data_contrato).getMonth() + 1, \"-\").concat(new Date(row.data_contrato).getDate() < 10 ? \"0\" + new Date(row.data_contrato).getDate() : new Date(row.data_contrato).getDate()) : \"\",\n        salario: row.salario ? row.salario : \"\",\n        id: type !== \"endereco\" ? row.codigo ? row.codigo : \"\" : row.cep ? row.cep : \"\",\n        crm: row.crm ? row.crm : \"\",\n        especialidade: row.especialidade ? row.especialidade : \"\",\n        peso: row.peso ? row.peso : \"\",\n        altura: row.altura ? row.altura : \"\",\n        tipoSanguineo: row.tipo_sanguineo ? row.tipo_sanguineo : \"\",\n        medico: row.nomemedico ? row.nomemedico : \"\",\n        dataConsulta: row.data ? \"\".concat(new Date(row.data).getFullYear(), \"-\").concat(new Date(row.data).getMonth() + 1 < 10 ? \"0\" + (new Date(row.data).getMonth() + 1) : new Date(row.data).getMonth() + 1, \"-\").concat(new Date(row.data).getDate() < 10 ? \"0\" + new Date(row.data).getDate() : new Date(row.data).getDate()) : \"\",\n        hora: row.hora ? row.hora.slice(0, 5) : \"\"\n      };\n    });\n  };\n\n  useEffect(function () {\n    if (type === \"consulta\") {\n      get(\"agenda\").then(function (resp) {\n        if (resp) {\n          console.log(\"GENERIC LIST 1\");\n\n          if (medicoCode) {\n            console.log(medicoCode);\n            var filteredList = resp.filter(function (user) {\n              return user.codigoMedico === medicoCode;\n            });\n            console.log(filteredList);\n            setTableRows(parseRows(filteredList, type));\n          } else {\n            setTableRows(parseRows(resp, type));\n          }\n        }\n      });\n    } else get(type).then(function (resp) {\n      if (resp) {\n        console.log(\"GENERIC LIST 2\");\n        console.log(resp);\n        setTableRows(parseRows(resp, type));\n      }\n    });\n  }, []);\n  var columns = [];\n\n  switch (type) {\n    case \"funcionario\":\n      columns = [{\n        field: \"nome\",\n        headerName: \"Nome\",\n        flex: 1\n      }, {\n        field: \"email\",\n        headerName: \"Email\",\n        flex: 1\n      }, {\n        field: \"telefone\",\n        headerName: \"Telefone\",\n        flex: 1\n      }, {\n        field: \"cep\",\n        headerName: \"CEP\",\n        flex: 1\n      }, {\n        field: \"logradouro\",\n        headerName: \"Logradouro\",\n        flex: 1\n      }, {\n        field: \"bairro\",\n        headerName: \"Bairro\",\n        flex: 1\n      }, {\n        field: \"cidade\",\n        headerName: \"Cidade\",\n        flex: 1\n      }, {\n        field: \"estado\",\n        headerName: \"Estado\",\n        flex: 1\n      }, {\n        field: \"dataInicio\",\n        headerName: \"Data Inicio\",\n        flex: 1\n      }, {\n        field: \"salario\",\n        headerName: \"Salario\",\n        flex: 1\n      }, {\n        field: \"crm\",\n        headerName: \"CRM\",\n        flex: 1\n      }, {\n        field: \"especialidade\",\n        headerName: \"Especialidade\",\n        flex: 1\n      }];\n      break;\n\n    case \"paciente\":\n      columns = [{\n        field: \"nome\",\n        headerName: \"Nome\",\n        flex: 1\n      }, {\n        field: \"email\",\n        headerName: \"Email\",\n        flex: 1\n      }, {\n        field: \"telefone\",\n        headerName: \"Telefone\",\n        flex: 1\n      }, {\n        field: \"cep\",\n        headerName: \"CEP\",\n        flex: 1\n      }, {\n        field: \"logradouro\",\n        headerName: \"Logradouro\",\n        flex: 1\n      }, {\n        field: \"bairro\",\n        headerName: \"Bairro\",\n        flex: 1\n      }, {\n        field: \"cidade\",\n        headerName: \"Cidade\",\n        flex: 1\n      }, {\n        field: \"estado\",\n        headerName: \"Estado\",\n        flex: 1\n      }, {\n        field: \"peso\",\n        headerName: \"Peso\",\n        flex: 1\n      }, {\n        field: \"altura\",\n        headerName: \"Altura\",\n        flex: 1\n      }, {\n        field: \"tipoSanguineo\",\n        headerName: \"Tipo Sanguíneo\",\n        flex: 1\n      }];\n      break;\n\n    case \"endereco\":\n      columns = [{\n        field: \"cep\",\n        headerName: \"CEP\",\n        flex: 1\n      }, {\n        field: \"logradouro\",\n        headerName: \"Logradouro\",\n        flex: 1\n      }, {\n        field: \"bairro\",\n        headerName: \"Bairro\",\n        flex: 1\n      }, {\n        field: \"cidade\",\n        headerName: \"Cidade\",\n        flex: 1\n      }, {\n        field: \"estado\",\n        headerName: \"Estado\",\n        flex: 1\n      }];\n      break;\n\n    case \"consulta\":\n    case \"consultaMedico\":\n      columns = [{\n        field: \"especialidade\",\n        headerName: \"Especialidade\",\n        flex: 1\n      }, {\n        field: \"medico\",\n        headerName: \"Médico\",\n        flex: 1\n      }, {\n        field: \"dataConsulta\",\n        headerName: \"Data\",\n        flex: 1\n      }, {\n        field: \"hora\",\n        headerName: \"Hora\",\n        flex: 1\n      }, {\n        field: \"nome\",\n        headerName: \"Nome\",\n        flex: 1\n      }, {\n        field: \"email\",\n        headerName: \"Email\",\n        flex: 1\n      }, {\n        field: \"telefone\",\n        headerName: \"Telefone\",\n        flex: 1\n      }];\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: type ? type.toUpperCase() : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: tableRows,\n        columns: columns,\n        pageSize: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(GenericList, \"9xHS84brP/LUAA2kQybc4K35kQA=\");\n\n_c = GenericList;\nexport default GenericList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenericList\");","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/EngSoftTP/src/components/generic-list.js"],"names":["DataGrid","useEffect","useState","Button","get","post","GenericList","type","medicoCode","tableRows","setTableRows","parseRows","rows","console","log","map","row","nome","email","telefone","cep","logradouro","bairro","cidade","estado","dataInicio","data_contrato","Date","getFullYear","getMonth","getDate","salario","id","codigo","crm","especialidade","peso","altura","tipoSanguineo","tipo_sanguineo","medico","nomemedico","dataConsulta","data","hora","slice","then","resp","filteredList","filter","user","codigoMedico","columns","field","headerName","flex","toUpperCase","height","width"],"mappings":"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","sourcesContent":["import { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { get, post } from \"../api-front\";\r\n\r\nconst GenericList = ({ type, medicoCode }) => {\r\n    const [tableRows, setTableRows] = useState([]);\r\n\r\n    const parseRows = (rows, type) => {\r\n        console.log(rows);\r\n        return rows.map((row) => {\r\n            return {\r\n                nome: row.nome ? row.nome : \"\",\r\n                email: row.email ? row.email : \"\",\r\n                telefone: row.telefone ? row.telefone : \"\",\r\n                cep: row.cep ? row.cep : \"\",\r\n                logradouro: row.logradouro ? row.logradouro : \"\",\r\n                bairro: row.bairro ? row.bairro : \"\",\r\n                cidade: row.cidade ? row.cidade : \"\",\r\n                estado: row.estado ? row.estado : \"\",\r\n                dataInicio: row.data_contrato\r\n                    ? `${new Date(row.data_contrato).getFullYear()}-${new Date(row.data_contrato).getMonth() + 1 < 10\r\n                        ? \"0\" +\r\n                        (new Date(row.data_contrato).getMonth() + 1)\r\n                        : new Date(row.data_contrato).getMonth() + 1\r\n                    }-${new Date(row.data_contrato).getDate() < 10\r\n                        ? \"0\" + new Date(row.data_contrato).getDate()\r\n                        : new Date(row.data_contrato).getDate()\r\n                    }`\r\n                    : \"\",\r\n                salario: row.salario ? row.salario : \"\",\r\n                id:\r\n                    type !== \"endereco\"\r\n                        ? row.codigo\r\n                            ? row.codigo\r\n                            : \"\"\r\n                        : row.cep\r\n                            ? row.cep\r\n                            : \"\",\r\n                crm: row.crm ? row.crm : \"\",\r\n                especialidade: row.especialidade ? row.especialidade : \"\",\r\n                peso: row.peso ? row.peso : \"\",\r\n                altura: row.altura ? row.altura : \"\",\r\n                tipoSanguineo: row.tipo_sanguineo ? row.tipo_sanguineo : \"\",\r\n                medico: row.nomemedico ? row.nomemedico : \"\",\r\n                dataConsulta: row.data\r\n                    ? `${new Date(row.data).getFullYear()}-${new Date(row.data).getMonth() + 1 < 10\r\n                        ? \"0\" + (new Date(row.data).getMonth() + 1)\r\n                        : new Date(row.data).getMonth() + 1\r\n                    }-${new Date(row.data).getDate() < 10\r\n                        ? \"0\" + new Date(row.data).getDate()\r\n                        : new Date(row.data).getDate()\r\n                    }`\r\n                    : \"\",\r\n                hora: row.hora ? row.hora.slice(0, 5) : \"\",\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (type === \"consulta\") {\r\n            get(\"agenda\").then((resp) => {\r\n                if (resp) {\r\n                    console.log(\"GENERIC LIST 1\")\r\n                    if (medicoCode) {\r\n                        console.log(medicoCode)\r\n                        let filteredList = resp.filter((user) => user.codigoMedico === medicoCode)\r\n                        console.log(filteredList)\r\n                        setTableRows(parseRows(filteredList, type))\r\n                    } else {\r\n                        setTableRows(parseRows(resp, type))\r\n                    }\r\n                }\r\n            });\r\n        } else\r\n            get(type).then((resp) => {\r\n                if (resp) {\r\n                    console.log(\"GENERIC LIST 2\")\r\n                    console.log(resp)\r\n                    setTableRows(parseRows(resp, type))\r\n                }\r\n            });\r\n    }, []);\r\n\r\n    let columns = [];\r\n    switch (type) {\r\n        case \"funcionario\":\r\n            columns = [\r\n                { field: \"nome\", headerName: \"Nome\", flex: 1 },\r\n                { field: \"email\", headerName: \"Email\", flex: 1 },\r\n                { field: \"telefone\", headerName: \"Telefone\", flex: 1 },\r\n                { field: \"cep\", headerName: \"CEP\", flex: 1 },\r\n                { field: \"logradouro\", headerName: \"Logradouro\", flex: 1 },\r\n                { field: \"bairro\", headerName: \"Bairro\", flex: 1 },\r\n                { field: \"cidade\", headerName: \"Cidade\", flex: 1 },\r\n                { field: \"estado\", headerName: \"Estado\", flex: 1 },\r\n                { field: \"dataInicio\", headerName: \"Data Inicio\", flex: 1 },\r\n                { field: \"salario\", headerName: \"Salario\", flex: 1 },\r\n                { field: \"crm\", headerName: \"CRM\", flex: 1 },\r\n                {\r\n                    field: \"especialidade\",\r\n                    headerName: \"Especialidade\",\r\n                    flex: 1,\r\n                },\r\n            ];\r\n            break;\r\n        case \"paciente\":\r\n            columns = [\r\n                { field: \"nome\", headerName: \"Nome\", flex: 1 },\r\n                { field: \"email\", headerName: \"Email\", flex: 1 },\r\n                { field: \"telefone\", headerName: \"Telefone\", flex: 1 },\r\n                { field: \"cep\", headerName: \"CEP\", flex: 1 },\r\n                { field: \"logradouro\", headerName: \"Logradouro\", flex: 1 },\r\n                { field: \"bairro\", headerName: \"Bairro\", flex: 1 },\r\n                { field: \"cidade\", headerName: \"Cidade\", flex: 1 },\r\n                { field: \"estado\", headerName: \"Estado\", flex: 1 },\r\n                { field: \"peso\", headerName: \"Peso\", flex: 1 },\r\n                { field: \"altura\", headerName: \"Altura\", flex: 1 },\r\n                {\r\n                    field: \"tipoSanguineo\",\r\n                    headerName: \"Tipo Sanguíneo\",\r\n                    flex: 1,\r\n                },\r\n            ];\r\n            break;\r\n        case \"endereco\":\r\n            columns = [\r\n                { field: \"cep\", headerName: \"CEP\", flex: 1 },\r\n                { field: \"logradouro\", headerName: \"Logradouro\", flex: 1 },\r\n                { field: \"bairro\", headerName: \"Bairro\", flex: 1 },\r\n                { field: \"cidade\", headerName: \"Cidade\", flex: 1 },\r\n                { field: \"estado\", headerName: \"Estado\", flex: 1 },\r\n            ];\r\n            break;\r\n        case \"consulta\":\r\n        case \"consultaMedico\":\r\n            columns = [\r\n                {\r\n                    field: \"especialidade\",\r\n                    headerName: \"Especialidade\",\r\n                    flex: 1,\r\n                },\r\n                { field: \"medico\", headerName: \"Médico\", flex: 1 },\r\n                { field: \"dataConsulta\", headerName: \"Data\", flex: 1 },\r\n                { field: \"hora\", headerName: \"Hora\", flex: 1 },\r\n                { field: \"nome\", headerName: \"Nome\", flex: 1 },\r\n                { field: \"email\", headerName: \"Email\", flex: 1 },\r\n                { field: \"telefone\", headerName: \"Telefone\", flex: 1 },\r\n            ];\r\n            break;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>{type ? type.toUpperCase() : \"\"}</h2>\r\n            <div style={{ height: 400, width: \"100%\" }}>\r\n                <DataGrid rows={tableRows} columns={columns} pageSize={5} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GenericList;\r\n"]},"metadata":{},"sourceType":"module"}