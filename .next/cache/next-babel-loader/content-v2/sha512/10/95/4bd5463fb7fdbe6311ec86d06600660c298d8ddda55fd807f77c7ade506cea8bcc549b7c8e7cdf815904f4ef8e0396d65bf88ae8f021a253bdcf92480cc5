{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\EngSoftTP\\\\src\\\\pages\\\\login.js\";\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport { withIronSession } from \"next-iron-session\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport Header from \"../components/header\";\nimport MySnackBar from \"../components/snackBar\";\nimport { snackBarSeverity } from \"../helper\";\nimport { defaultStyles } from \"../styles\";\nimport { login } from \"../api-front\";\nexport const getServerSideProps = withIronSession(async ({\n  req,\n  res\n}) => {\n  const user = req.session.get(\"user\");\n\n  if (!user) {\n    return {\n      props: {}\n    };\n  }\n\n  req.session.destroy();\n  return {\n    props: {}\n  };\n}, {\n  cookieName: \"MYSITECOOKIE\",\n  cookieOptions: {\n    secure: false ? true : false\n  },\n  password: process.env.APPLICATION_SECRET\n});\n\nconst SignInPage = ({\n  theme,\n  user,\n  darkMode,\n  setDarkMode\n}) => {\n  const style = defaultStyles();\n  const router = useRouter();\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: snackBarMessage,\n    1: setSnackBarMessage\n  } = useState(\"\");\n  const {\n    0: isOpenSnackBar,\n    1: setIsOpenSnackBar\n  } = useState(false);\n  const {\n    0: severitySnackBar,\n    1: setSeveritySnackBar\n  } = useState(snackBarSeverity.SUCCESS);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(email, password);\n\n    if (response.status) {\n      setSnackBarMessage(\"Logado com sucesso\");\n      setSeveritySnackBar(snackBarSeverity.SUCCESS);\n      setIsOpenSnackBar(true);\n      window.open(\"https://engsoft-clinica.vercel.app/\", \"_blank\");\n    } else {\n      setSnackBarMessage(response.message);\n      setSeveritySnackBar(snackBarSeverity.ERROR);\n      setIsOpenSnackBar(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      theme: theme,\n      user: user,\n      darkMode: darkMode,\n      toggleDarkMode: setDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: style.divBox,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          maxWidth: \"80vw\",\n          alignItems: \"center\"\n        },\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          className: style.section,\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"flex-end\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: e => setEmail(e.target.value),\n                label: \"Email\",\n                variant: \"outlined\",\n                style: {\n                  justifyItems: \"center\",\n                  padding: \"25px\",\n                  width: \"350px\"\n                },\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: e => setPassword(e.target.value),\n                label: \"Senha\",\n                variant: \"outlined\",\n                style: {\n                  justifyItems: \"center\",\n                  padding: \"25px\",\n                  width: \"350px\"\n                },\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/assets/logo.svg\",\n            height: 275,\n            width: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySnackBar, {\n      open: isOpenSnackBar,\n      message: snackBarMessage,\n      severity: severitySnackBar,\n      setClose: setIsOpenSnackBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default SignInPage;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/EngSoftTP/src/pages/login.js"],"names":["Button","Grid","TextField","withIronSession","Image","useRouter","React","useState","Header","MySnackBar","snackBarSeverity","defaultStyles","login","getServerSideProps","req","res","user","session","get","props","destroy","cookieName","cookieOptions","secure","password","process","env","APPLICATION_SECRET","SignInPage","theme","darkMode","setDarkMode","style","router","email","setEmail","setPassword","snackBarMessage","setSnackBarMessage","isOpenSnackBar","setIsOpenSnackBar","severitySnackBar","setSeveritySnackBar","SUCCESS","handleSubmit","e","preventDefault","response","status","window","open","message","ERROR","divBox","maxWidth","alignItems","section","target","value","justifyItems","padding","width"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport { withIronSession } from \"next-iron-session\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MySnackBar from \"../components/snackBar\";\r\nimport { snackBarSeverity } from \"../helper\";\r\nimport { defaultStyles } from \"../styles\";\r\nimport { login } from \"../api-front\";\r\n\r\nexport const getServerSideProps = withIronSession(\r\n    async ({ req, res }) => {\r\n        const user = req.session.get(\"user\");\r\n\r\n        if (!user) {\r\n            return { props: {} };\r\n        }\r\n        req.session.destroy();\r\n        return {\r\n            props: {},\r\n        };\r\n    },\r\n    {\r\n        cookieName: \"MYSITECOOKIE\",\r\n        cookieOptions: {\r\n            secure: process.env.NODE_ENV === \"production\" ? true : false,\r\n        },\r\n        password: process.env.APPLICATION_SECRET,\r\n    }\r\n);\r\n\r\nconst SignInPage = ({ theme, user, darkMode, setDarkMode }) => {\r\n    const style = defaultStyles();\r\n    const router = useRouter();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\r\n    const [isOpenSnackBar, setIsOpenSnackBar] = useState(false);\r\n    const [severitySnackBar, setSeveritySnackBar] = useState(\r\n        snackBarSeverity.SUCCESS\r\n    );\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await login(email, password);\r\n\r\n        if (response.status) {\r\n            setSnackBarMessage(\"Logado com sucesso\");\r\n            setSeveritySnackBar(snackBarSeverity.SUCCESS);\r\n            setIsOpenSnackBar(true);\r\n            window.open(\"https://engsoft-clinica.vercel.app/\", \"_blank\");\r\n        } else {\r\n            setSnackBarMessage(response.message);\r\n            setSeveritySnackBar(snackBarSeverity.ERROR);\r\n            setIsOpenSnackBar(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                theme={theme}\r\n                user={user}\r\n                darkMode={darkMode}\r\n                toggleDarkMode={setDarkMode}\r\n            />\r\n\r\n            <form className={style.divBox} onSubmit={handleSubmit}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    style={{ maxWidth: \"80vw\", alignItems: \"center\" }}\r\n                    justify=\"space-between\"\r\n                >\r\n                    <Grid className={style.section} item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"flex-end\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item>\r\n                                <TextField\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    label=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    style={{\r\n                                        justifyItems: \"center\",\r\n                                        padding: \"25px\",\r\n                                        width: \"350px\",\r\n                                    }}\r\n                                    type=\"text\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                    label=\"Senha\"\r\n                                    variant=\"outlined\"\r\n                                    style={{\r\n                                        justifyItems: \"center\",\r\n                                        padding: \"25px\",\r\n                                        width: \"350px\",\r\n                                    }}\r\n                                    type=\"password\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Sign in\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Image\r\n                            src=\"/assets/logo.svg\"\r\n                            height={275}\r\n                            width={500}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <MySnackBar\r\n                open={isOpenSnackBar}\r\n                message={snackBarMessage}\r\n                severity={severitySnackBar}\r\n                setClose={setIsOpenSnackBar}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n"]},"metadata":{},"sourceType":"module"}