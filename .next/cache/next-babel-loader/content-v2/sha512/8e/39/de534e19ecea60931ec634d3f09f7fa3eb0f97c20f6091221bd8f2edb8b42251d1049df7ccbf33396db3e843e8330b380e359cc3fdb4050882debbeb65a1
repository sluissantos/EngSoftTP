{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"https://engsoft-clinica.vercel.app/api\";\n\nconst get = async (address, params = null) => {\n  let query = \"?\";\n\n  for (const key in params) {\n    query += `${key}=${params[key]}&`;\n  }\n\n  query = query.slice(0, -1);\n  return axios.get(`${baseUrl}/${address}${query}`).then(res => {\n    return res ? res.data : null;\n  });\n};\n\nconst post = async (address, data) => {\n  const url = `${baseUrl}/${address}/insert`;\n  console.log(\"url\");\n  axios.post(url, data).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.error(error);\n  });\n};\n\nconst login = async (email, password) => {\n  try {\n    const url = \"/sessions\";\n    let response = await axios.post(`${baseUrl}${url}`, {\n      email,\n      password\n    });\n    console.log(\"RESPONSE\");\n    console.log(response);\n\n    if (response.status === 201) {\n      return {\n        status: true,\n        message: \"\"\n      };\n    }\n\n    return {\n      status: false,\n      message: response.data\n    };\n  } catch (ex) {\n    console.log(ex.response);\n    console.log(ex.request);\n    console.log(\"LOGIN ERROR\");\n    console.log(ex);\n    return {\n      status: false,\n      message: \"Senha incorreta\"\n    };\n  }\n};\n\nexport { baseUrl, get, post, login };","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/EngSoftTP/src/api-front/index.js"],"names":["axios","baseUrl","get","address","params","query","key","slice","then","res","data","post","url","console","log","response","catch","error","login","email","password","status","message","ex","request"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,wCAAhB;;AAEA,MAAMC,GAAG,GAAG,OAAOC,OAAP,EAAgBC,MAAM,GAAG,IAAzB,KAAkC;AAC1C,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,MAAMC,GAAX,IAAkBF,MAAlB,EAA0B;AACtBC,IAAAA,KAAK,IAAK,GAAEC,GAAI,IAAGF,MAAM,CAACE,GAAD,CAAM,GAA/B;AACH;;AAEDD,EAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAR;AAEA,SAAOP,KAAK,CAACE,GAAN,CAAW,GAAED,OAAQ,IAAGE,OAAQ,GAAEE,KAAM,EAAxC,EAA2CG,IAA3C,CAAiDC,GAAD,IAAS;AAC5D,WAAOA,GAAG,GAAGA,GAAG,CAACC,IAAP,GAAc,IAAxB;AACH,GAFM,CAAP;AAGH,CAXD;;AAaA,MAAMC,IAAI,GAAG,OAAOR,OAAP,EAAgBO,IAAhB,KAAyB;AAClC,QAAME,GAAG,GAAI,GAAEX,OAAQ,IAAGE,OAAQ,SAAlC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAd,EAAAA,KAAK,CACAW,IADL,CACUC,GADV,EACeF,IADf,EAEKF,IAFL,CAEU,UAAUO,QAAV,EAAoB;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,GAJL,EAKKC,KALL,CAKW,UAAUC,KAAV,EAAiB;AACpBJ,IAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACH,GAPL;AAQH,CAXD;;AAaA,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACrC,MAAI;AACA,UAAMR,GAAG,GAAG,WAAZ;AACA,QAAIG,QAAQ,GAAG,MAAMf,KAAK,CAACW,IAAN,CAAY,GAAEV,OAAQ,GAAEW,GAAI,EAA5B,EAA+B;AAChDO,MAAAA,KADgD;AAEhDC,MAAAA;AAFgD,KAA/B,CAArB;AAKAP,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;;AACA,QAAIA,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAO;AACHA,QAAAA,MAAM,EAAE,IADL;AAEHC,QAAAA,OAAO,EAAE;AAFN,OAAP;AAIH;;AACD,WAAO;AACHD,MAAAA,MAAM,EAAE,KADL;AAEHC,MAAAA,OAAO,EAAEP,QAAQ,CAACL;AAFf,KAAP;AAIH,GAnBD,CAmBE,OAAOa,EAAP,EAAW;AACTV,IAAAA,OAAO,CAACC,GAAR,CAAYS,EAAE,CAACR,QAAf;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYS,EAAE,CAACC,OAAf;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYS,EAAZ;AACA,WAAO;AACHF,MAAAA,MAAM,EAAE,KADL;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH;AACJ,CA9BD;;AAgCA,SAASrB,OAAT,EAAkBC,GAAlB,EAAuBS,IAAvB,EAA6BO,KAA7B","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://engsoft-clinica.vercel.app/api\";\r\n\r\nconst get = async (address, params = null) => {\r\n    let query = \"?\";\r\n    for (const key in params) {\r\n        query += `${key}=${params[key]}&`;\r\n    }\r\n\r\n    query = query.slice(0, -1);\r\n\r\n    return axios.get(`${baseUrl}/${address}${query}`).then((res) => {\r\n        return res ? res.data : null;\r\n    });\r\n};\r\n\r\nconst post = async (address, data) => {\r\n    const url = `${baseUrl}/${address}/insert`;\r\n    console.log(\"url\");\r\n    axios\r\n        .post(url, data)\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.error(error);\r\n        });\r\n};\r\n\r\nconst login = async (email, password) => {\r\n    try {\r\n        const url = \"/sessions\";\r\n        let response = await axios.post(`${baseUrl}${url}`, {\r\n            email,\r\n            password,\r\n        });\r\n\r\n        console.log(\"RESPONSE\");\r\n        console.log(response);\r\n        if (response.status === 201) {\r\n            return {\r\n                status: true,\r\n                message: \"\",\r\n            };\r\n        }\r\n        return {\r\n            status: false,\r\n            message: response.data,\r\n        };\r\n    } catch (ex) {\r\n        console.log(ex.response);\r\n        console.log(ex.request);\r\n        console.log(\"LOGIN ERROR\");\r\n        console.log(ex);\r\n        return {\r\n            status: false,\r\n            message: \"Senha incorreta\",\r\n        };\r\n    }\r\n};\r\n\r\nexport { baseUrl, get, post, login };\r\n"]},"metadata":{},"sourceType":"module"}