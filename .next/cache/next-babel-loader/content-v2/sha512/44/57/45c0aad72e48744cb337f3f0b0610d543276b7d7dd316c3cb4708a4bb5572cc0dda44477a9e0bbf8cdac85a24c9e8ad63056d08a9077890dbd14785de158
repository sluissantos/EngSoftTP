{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/Samsung/OneDrive/\\xC1rea de Trabalho/eng soft/EngSoftTP/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Samsung/OneDrive/\\xC1rea de Trabalho/eng soft/EngSoftTP/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samsung\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\eng soft\\\\EngSoftTP\\\\src\\\\pages\\\\login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport Header from \"../components/header\";\nimport MySnackBar from \"../components/snackBar\";\nimport { snackBarSeverity } from \"../helper\";\nimport { defaultStyles } from \"../styles\";\nimport { login } from \"../api-front\";\n\nvar SignInPage = function SignInPage(_ref) {\n  _s();\n\n  var theme = _ref.theme,\n      user = _ref.user,\n      darkMode = _ref.darkMode,\n      setDarkMode = _ref.setDarkMode;\n  var style = defaultStyles();\n  var router = useRouter();\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      snackBarMessage = _useState3[0],\n      setSnackBarMessage = _useState3[1];\n\n  var _useState4 = useState(false),\n      isOpenSnackBar = _useState4[0],\n      setIsOpenSnackBar = _useState4[1];\n\n  var _useState5 = useState(snackBarSeverity.SUCCESS),\n      severitySnackBar = _useState5[0],\n      setSeveritySnackBar = _useState5[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return login(email, password);\n\n            case 3:\n              response = _context.sent;\n\n              if (response.status) {\n                setSnackBarMessage(\"Logado com sucesso\");\n                setSeveritySnackBar(snackBarSeverity.SUCCESS);\n                setIsOpenSnackBar(true);\n                window.open(\"https://engsoft-clinica.vercel.app/\", \"_blank\");\n              } else {\n                setSnackBarMessage(response.message);\n                setSeveritySnackBar(snackBarSeverity.ERROR);\n                setIsOpenSnackBar(true);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      theme: theme,\n      user: user,\n      darkMode: darkMode,\n      toggleDarkMode: setDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: style.divBox,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        style: {\n          maxWidth: \"80vw\",\n          alignItems: \"center\"\n        },\n        justify: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          className: style.section,\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            justify: \"flex-end\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: function onChange(e) {\n                  return setEmail(e.target.value);\n                },\n                label: \"Email\",\n                variant: \"outlined\",\n                style: {\n                  justifyItems: \"center\",\n                  padding: \"25px\",\n                  width: \"350px\"\n                },\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                onChange: function onChange(e) {\n                  return setPassword(e.target.value);\n                },\n                label: \"Senha\",\n                variant: \"outlined\",\n                style: {\n                  justifyItems: \"center\",\n                  padding: \"25px\",\n                  width: \"350px\"\n                },\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/assets/logo.svg\",\n            height: 275,\n            width: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MySnackBar, {\n      open: isOpenSnackBar,\n      message: snackBarMessage,\n      severity: severitySnackBar,\n      setClose: setIsOpenSnackBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(SignInPage, \"7V3kCNEbNlCBQBLG1XbpZolYMJ4=\", false, function () {\n  return [useRouter];\n});\n\n_c = SignInPage;\nexport var __N_SSP = true;\nexport default SignInPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"sources":["C:/Users/Samsung/OneDrive/√Årea de Trabalho/eng soft/EngSoftTP/src/pages/login.js"],"names":["Button","Grid","TextField","Image","useRouter","React","useState","Header","MySnackBar","snackBarSeverity","defaultStyles","login","SignInPage","theme","user","darkMode","setDarkMode","style","router","email","setEmail","password","setPassword","snackBarMessage","setSnackBarMessage","isOpenSnackBar","setIsOpenSnackBar","SUCCESS","severitySnackBar","setSeveritySnackBar","handleSubmit","e","preventDefault","response","status","window","open","message","ERROR","divBox","maxWidth","alignItems","section","target","value","justifyItems","padding","width"],"mappings":"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","sourcesContent":["import { Button, Grid, TextField } from \"@material-ui/core\";\r\nimport { withIronSession } from \"next-iron-session\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MySnackBar from \"../components/snackBar\";\r\nimport { snackBarSeverity } from \"../helper\";\r\nimport { defaultStyles } from \"../styles\";\r\nimport { login } from \"../api-front\";\r\n\r\nexport const getServerSideProps = withIronSession(\r\n    async ({ req, res }) => {\r\n        const user = req.session.get(\"user\");\r\n\r\n        if (!user) {\r\n            return { props: {} };\r\n        }\r\n        req.session.destroy();\r\n        return {\r\n            props: {},\r\n        };\r\n    },\r\n    {\r\n        cookieName: \"MYSITECOOKIE\",\r\n        cookieOptions: {\r\n            secure: process.env.NODE_ENV === \"production\" ? true : false,\r\n        },\r\n        password: process.env.APPLICATION_SECRET,\r\n    }\r\n);\r\n\r\nconst SignInPage = ({ theme, user, darkMode, setDarkMode }) => {\r\n    const style = defaultStyles();\r\n    const router = useRouter();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\r\n    const [isOpenSnackBar, setIsOpenSnackBar] = useState(false);\r\n    const [severitySnackBar, setSeveritySnackBar] = useState(\r\n        snackBarSeverity.SUCCESS\r\n    );\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await login(email, password);\r\n\r\n        if (response.status) {\r\n            setSnackBarMessage(\"Logado com sucesso\");\r\n            setSeveritySnackBar(snackBarSeverity.SUCCESS);\r\n            setIsOpenSnackBar(true);\r\n            window.open(\"https://engsoft-clinica.vercel.app/\", \"_blank\");\r\n        } else {\r\n            setSnackBarMessage(response.message);\r\n            setSeveritySnackBar(snackBarSeverity.ERROR);\r\n            setIsOpenSnackBar(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                theme={theme}\r\n                user={user}\r\n                darkMode={darkMode}\r\n                toggleDarkMode={setDarkMode}\r\n            />\r\n\r\n            <form className={style.divBox} onSubmit={handleSubmit}>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    style={{ maxWidth: \"80vw\", alignItems: \"center\" }}\r\n                    justify=\"space-between\"\r\n                >\r\n                    <Grid className={style.section} item>\r\n                        <Grid\r\n                            container\r\n                            direction=\"column\"\r\n                            justify=\"flex-end\"\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <Grid item>\r\n                                <TextField\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    label=\"Email\"\r\n                                    variant=\"outlined\"\r\n                                    style={{\r\n                                        justifyItems: \"center\",\r\n                                        padding: \"25px\",\r\n                                        width: \"350px\",\r\n                                    }}\r\n                                    type=\"text\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <TextField\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                    label=\"Senha\"\r\n                                    variant=\"outlined\"\r\n                                    style={{\r\n                                        justifyItems: \"center\",\r\n                                        padding: \"25px\",\r\n                                        width: \"350px\",\r\n                                    }}\r\n                                    type=\"password\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Sign in\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Image\r\n                            src=\"/assets/logo.svg\"\r\n                            height={275}\r\n                            width={500}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <MySnackBar\r\n                open={isOpenSnackBar}\r\n                message={snackBarMessage}\r\n                severity={severitySnackBar}\r\n                setClose={setIsOpenSnackBar}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignInPage;\r\n"]},"metadata":{},"sourceType":"module"}