{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\EngSoftTP\\\\src\\\\components\\\\generic-form.js\";\nimport { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { post, get } from \"../api-front\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport React from \"react\";\nimport { defaultStyles, form } from \"../styles\";\nimport MySnackBar from \"../components/snackBar\";\nimport { snackBarSeverity } from \"../helper\";\n\nconst GenericForm = ({\n  type\n}) => {\n  // type: \"funcionario\", \"medico\", \"paciente\"\n  const formStyle = form();\n  const {\n    0: snackBarMessage,\n    1: setSnackBarMessage\n  } = useState(\"\");\n  const {\n    0: isOpenSnackBar,\n    1: setIsOpenSnackBar\n  } = useState(false);\n  const {\n    0: severitySnackBar,\n    1: setSeveritySnackBar\n  } = useState(snackBarSeverity.SUCCESS);\n\n  const setSuccessSnackBar = () => {\n    setSnackBarMessage(\"Sucesso\");\n    setSeveritySnackBar(snackBarSeverity.SUCCESS);\n    setIsOpenSnackBar(true);\n  };\n\n  const setErrorSnackbar = () => {\n    setSnackBarMessage(\"Ocorreu um erro!\");\n    setSeveritySnackBar(snackBarSeverity.ERROR);\n    setIsOpenSnackBar(true);\n  };\n\n  const handleSendClick = async () => {\n    try {\n      switch (type) {\n        case \"medico\":\n        case \"funcionario\":\n          await post(\"funcionario\", {\n            bairro: formBairro,\n            cep: formCep,\n            cidade: formCidade,\n            email: formEmail,\n            estado: formEstado,\n            logradouro: formLogradouro,\n            nome: formNome,\n            telefone: formTelefone,\n            data_contrato: `${formDataInicio.getFullYear()}-${formDataInicio.getMonth() + 1 < 10 ? \"0\" + (formDataInicio.getMonth() + 1) : formDataInicio.getMonth() + 1}-${formDataInicio.getDate() < 10 ? \"0\" + formDataInicio.getDate() : formDataInicio.getDate()}`,\n            salario: formSalario,\n            senha_hash: formSenha,\n            crm: formCrm,\n            especialidade: formEspecialidade,\n            isMedico: isMedico\n          }).then(() => setSuccessSnackBar()).catch(error => {\n            setErrorSnackbar();\n          });\n          break;\n\n        case \"paciente\":\n          await post(\"paciente\", {\n            bairro: formBairro,\n            cep: formCep,\n            cidade: formCidade,\n            email: formEmail,\n            estado: formEstado,\n            logradouro: formLogradouro,\n            nome: formNome,\n            telefone: formTelefone,\n            peso: formPeso,\n            altura: formAltura.replace(\",\", \".\"),\n            tipo_sanguineo: formTipoSanguineo\n          }).then(() => setSuccessSnackBar()).catch(error => {\n            setErrorSnackbar();\n          });\n          break;\n\n        case \"endereco\":\n          await post(\"endereco\", {\n            bairro: formBairro,\n            cep: formCep,\n            cidade: formCidade,\n            estado: formEstado,\n            logradouro: formLogradouro\n          }).then(() => setSuccessSnackBar()).catch(error => {\n            setErrorSnackbar();\n          });\n          break;\n\n        case \"consulta\":\n          await post(\"agenda\", {\n            data: `${formDataConsulta.getFullYear()}-${formDataConsulta.getMonth() + 1 < 10 ? \"0\" + (formDataConsulta.getMonth() + 1) : formDataConsulta.getMonth() + 1}-${formDataConsulta.getDate() < 10 ? \"0\" + formDataConsulta.getDate() : formDataConsulta.getDate()}`,\n            hora: formHoraConsulta,\n            nome: formNome,\n            email: formEmail,\n            telefone: formTelefone,\n            codigomedico: formMedico\n          }).then(() => setSuccessSnackBar()).catch(error => {\n            setErrorSnackbar();\n          });\n          break;\n\n        default:\n          break;\n      }\n    } catch (ex) {\n      setErrorSnackbar();\n    }\n  };\n\n  const handleSetFormCep = value => {\n    setFormCep(value);\n\n    if (value && value.replace(\"-\", \"\").length === 8) {\n      get(`endereco/${value.replace(\"-\", \"\")}`).then(result => {\n        if (result && result[0]) {\n          console.log(result);\n          setFormLogradouro(result[0].logradouro);\n          setFormBairro(result[0].bairro);\n          setFormCidade(result[0].cidade);\n          setFormEstado(result[0].estado);\n        }\n      });\n    }\n  };\n\n  const handleSetIsMedico = value => {\n    setIsMedico(value);\n  };\n\n  const handleSetFormSelectEspecialidade = value => {\n    setFormSelectEspecialidade(value);\n    get(\"especialidade/medicos\", {\n      especialidade: value\n    }).then(result => {\n      setOptionsMedico(result);\n    });\n  };\n\n  const handleSetFormDataConsulta = value => {\n    setFormDataConsulta(value);\n    get(\"agenda/horarios\", {\n      codigomedico: formMedico,\n      data: `${value.getFullYear()}-${value.getMonth() + 1 < 10 ? \"0\" + (value.getMonth() + 1) : value.getMonth() + 1}-${value.getDate() < 10 ? \"0\" + value.getDate() : value.getDate()}`\n    }).then(result => setOptionsHour(result.map(value => value.slice(0, 5)))); // busca no back as options\n  }; // states\n\n\n  const {\n    0: formMedico,\n    1: setFormMedico\n  } = useState(\"\");\n  const {\n    0: formSelectEspecialidade,\n    1: setFormSelectEspecialidade\n  } = useState(\"\");\n  const {\n    0: formDataConsulta,\n    1: setFormDataConsulta\n  } = useState(new Date());\n  const {\n    0: formHoraConsulta,\n    1: setFormHoraConsulta\n  } = useState(\"\");\n  const {\n    0: formNome,\n    1: setFormNome\n  } = useState(\"\");\n  const {\n    0: formEmail,\n    1: setFormEmail\n  } = useState(\"\");\n  const {\n    0: formTelefone,\n    1: setFormTelefone\n  } = useState(\"\");\n  const {\n    0: formCep,\n    1: setFormCep\n  } = useState(\"\");\n  const {\n    0: formLogradouro,\n    1: setFormLogradouro\n  } = useState(\"\");\n  const {\n    0: formBairro,\n    1: setFormBairro\n  } = useState(\"\");\n  const {\n    0: formCidade,\n    1: setFormCidade\n  } = useState(\"\");\n  const {\n    0: formEstado,\n    1: setFormEstado\n  } = useState(\"\");\n  const {\n    0: formDataInicio,\n    1: setFormDataInicio\n  } = useState(new Date());\n  const {\n    0: formSalario,\n    1: setFormSalario\n  } = useState(\"\");\n  const {\n    0: formSenha,\n    1: setFormSenha\n  } = useState(\"\");\n  const {\n    0: formEspecialidade,\n    1: setFormEspecialidade\n  } = useState(\"\");\n  const {\n    0: formCrm,\n    1: setFormCrm\n  } = useState(\"\");\n  const {\n    0: formPeso,\n    1: setFormPeso\n  } = useState(\"\");\n  const {\n    0: formAltura,\n    1: setFormAltura\n  } = useState(\"\");\n  const {\n    0: formTipoSanguineo,\n    1: setFormTipoSanguineo\n  } = useState(\"\");\n  const {\n    0: optionsEspecialidade,\n    1: setOptionsEspecialidade\n  } = useState([]);\n  const {\n    0: optionsMedico,\n    1: setOptionsMedico\n  } = useState([]);\n  const {\n    0: optionsHour,\n    1: setOptionsHour\n  } = useState([]);\n  const {\n    0: isMedico,\n    1: setIsMedico\n  } = useState(false);\n  useEffect(() => {\n    get(\"especialidade\").then(result => setOptionsEspecialidade(result));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: formStyle.default,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: formStyle.box,\n        children: [[\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: formStyle.item,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              style: {\n                marginLeft: \"15px\"\n              },\n              className: formStyle.item,\n              children: \"Especialidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: formStyle.item,\n              label: \"Especialidade\",\n              id: \"demo-simple-select\",\n              value: formSelectEspecialidade,\n              onChange: ev => {\n                handleSetFormSelectEspecialidade(ev.target.value);\n              },\n              children: optionsEspecialidade.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: option.especialidade,\n                value: option.especialidade,\n                children: option.especialidade\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), [\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: formStyle.item,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              className: formStyle.item,\n              children: \"M\\xE9dico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: formStyle.item,\n              label: \"Medico\",\n              id: \"demo-simple-select\",\n              value: formMedico,\n              onChange: ev => {\n                setFormMedico(ev.target.value);\n              },\n              children: optionsMedico.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: option.nome,\n                value: option.codigo,\n                children: option.nome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), [\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            style: {\n              marginBottom: \"45px\",\n              marginLeft: \"20px\"\n            },\n            disableToolbar: true,\n            variant: \"outlined\",\n            format: \"dd/MM/yyyy\",\n            id: \"date-picker-inline\",\n            label: \"Data da Consulta\",\n            value: formDataConsulta,\n            onChange: ev => {\n              handleSetFormDataConsulta(ev);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), [\"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: formStyle.item,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              style: {\n                marginLeft: \"15px\"\n              },\n              className: formStyle.item,\n              children: \"Hora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              className: formStyle.item,\n              label: \"Hora\",\n              id: \"demo-simple-select\",\n              value: formHoraConsulta,\n              onChange: ev => {\n                setFormHoraConsulta(ev.target.value);\n              },\n              children: optionsHour.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                id: option,\n                value: option,\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Nome\",\n            variant: \"outlined\",\n            value: formNome,\n            onChange: ev => {\n              setFormNome(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Email\",\n            variant: \"outlined\",\n            value: formEmail,\n            onChange: ev => {\n              setFormEmail(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Telefone\",\n            variant: \"outlined\",\n            value: formTelefone,\n            onChange: ev => {\n              setFormTelefone(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"CEP\",\n            variant: \"outlined\",\n            value: formCep,\n            onChange: ev => {\n              handleSetFormCep(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Logradouro\",\n            variant: \"outlined\",\n            value: formLogradouro,\n            onChange: ev => {\n              setFormLogradouro(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Bairro\",\n            variant: \"outlined\",\n            value: formBairro,\n            onChange: ev => {\n              setFormBairro(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Cidade\",\n            variant: \"outlined\",\n            value: formCidade,\n            onChange: ev => {\n              setFormCidade(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Estado\",\n            variant: \"outlined\",\n            value: formEstado,\n            onChange: ev => {\n              setFormEstado(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            className: formStyle.item,\n            disableToolbar: true,\n            variant: \"outlined\",\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            id: \"date-picker-inline\",\n            label: \"Data Inicio\",\n            value: formDataInicio,\n            onChange: ev => {\n              setFormDataInicio(ev);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Sal\\xE1rio\",\n            variant: \"outlined\",\n            value: formSalario,\n            onChange: ev => {\n              setFormSalario(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            type: \"password\",\n            label: \"Senha\",\n            variant: \"outlined\",\n            value: formSenha,\n            onChange: ev => {\n              setFormSenha(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\"].includes(type) && isMedico && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Especialidade\",\n            variant: \"outlined\",\n            value: formEspecialidade,\n            onChange: ev => {\n              setFormEspecialidade(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\"].includes(type) && isMedico && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"CRM\",\n            variant: \"outlined\",\n            value: formCrm,\n            onChange: ev => {\n              setFormCrm(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 25\n        }, this), [\"paciente\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Peso\",\n            variant: \"outlined\",\n            value: formPeso,\n            onChange: ev => {\n              setFormPeso(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 25\n        }, this), [\"paciente\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Altura\",\n            variant: \"outlined\",\n            value: formAltura,\n            onChange: ev => {\n              setFormAltura(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }, this), [\"paciente\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: formStyle.item,\n            id: \"outlined-basic\",\n            label: \"Tipo sangu\\xEDneo\",\n            variant: \"outlined\",\n            value: formTipoSanguineo,\n            onChange: ev => {\n              setFormTipoSanguineo(ev.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }, this), [\"funcionario\", \"medico\"].includes(type) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: formStyle.item,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: isMedico,\n              onChange: () => handleSetIsMedico(!isMedico),\n              name: \"checkedB\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 37\n            }, this),\n            label: \"M\\xE9dico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: formStyle.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          style: {\n            marginRight: \"30px\"\n          },\n          onClick: () => {},\n          children: \"Limpar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleSendClick,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySnackBar, {\n      open: isOpenSnackBar,\n      message: snackBarMessage,\n      severity: severitySnackBar,\n      setClose: setIsOpenSnackBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport default GenericForm;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/EngSoftTP/src/components/generic-form.js"],"names":["useEffect","useState","TextField","DateFnsUtils","MenuItem","Select","InputLabel","FormControl","Button","Switch","Checkbox","FormControlLabel","post","get","MuiPickersUtilsProvider","KeyboardDatePicker","React","defaultStyles","form","MySnackBar","snackBarSeverity","GenericForm","type","formStyle","snackBarMessage","setSnackBarMessage","isOpenSnackBar","setIsOpenSnackBar","severitySnackBar","setSeveritySnackBar","SUCCESS","setSuccessSnackBar","setErrorSnackbar","ERROR","handleSendClick","bairro","formBairro","cep","formCep","cidade","formCidade","email","formEmail","estado","formEstado","logradouro","formLogradouro","nome","formNome","telefone","formTelefone","data_contrato","formDataInicio","getFullYear","getMonth","getDate","salario","formSalario","senha_hash","formSenha","crm","formCrm","especialidade","formEspecialidade","isMedico","then","catch","error","peso","formPeso","altura","formAltura","replace","tipo_sanguineo","formTipoSanguineo","data","formDataConsulta","hora","formHoraConsulta","codigomedico","formMedico","ex","handleSetFormCep","value","setFormCep","length","result","console","log","setFormLogradouro","setFormBairro","setFormCidade","setFormEstado","handleSetIsMedico","setIsMedico","handleSetFormSelectEspecialidade","setFormSelectEspecialidade","setOptionsMedico","handleSetFormDataConsulta","setFormDataConsulta","setOptionsHour","map","slice","setFormMedico","formSelectEspecialidade","Date","setFormHoraConsulta","setFormNome","setFormEmail","setFormTelefone","setFormDataInicio","setFormSalario","setFormSenha","setFormEspecialidade","setFormCrm","setFormPeso","setFormAltura","setFormTipoSanguineo","optionsEspecialidade","setOptionsEspecialidade","optionsMedico","optionsHour","default","box","includes","item","marginLeft","ev","target","option","codigo","marginBottom","buttons","marginRight"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { post, get } from \"../api-front\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport React from \"react\";\r\nimport { defaultStyles, form } from \"../styles\";\r\nimport MySnackBar from \"../components/snackBar\";\r\nimport { snackBarSeverity } from \"../helper\";\r\n\r\nconst GenericForm = ({ type }) => {\r\n    // type: \"funcionario\", \"medico\", \"paciente\"\r\n    const formStyle = form();\r\n\r\n    const [snackBarMessage, setSnackBarMessage] = useState(\"\");\r\n    const [isOpenSnackBar, setIsOpenSnackBar] = useState(false);\r\n    const [severitySnackBar, setSeveritySnackBar] = useState(\r\n        snackBarSeverity.SUCCESS\r\n    );\r\n\r\n    const setSuccessSnackBar = () => {\r\n        setSnackBarMessage(\"Sucesso\");\r\n        setSeveritySnackBar(snackBarSeverity.SUCCESS);\r\n        setIsOpenSnackBar(true);\r\n    };\r\n\r\n    const setErrorSnackbar = () => {\r\n        setSnackBarMessage(\"Ocorreu um erro!\");\r\n        setSeveritySnackBar(snackBarSeverity.ERROR);\r\n        setIsOpenSnackBar(true);\r\n    };\r\n\r\n    const handleSendClick = async () => {\r\n        try {\r\n            switch (type) {\r\n                case \"medico\":\r\n                case \"funcionario\":\r\n                    await post(\"funcionario\", {\r\n                        bairro: formBairro,\r\n                        cep: formCep,\r\n                        cidade: formCidade,\r\n                        email: formEmail,\r\n                        estado: formEstado,\r\n                        logradouro: formLogradouro,\r\n                        nome: formNome,\r\n                        telefone: formTelefone,\r\n                        data_contrato: `${formDataInicio.getFullYear()}-${\r\n                            formDataInicio.getMonth() + 1 < 10\r\n                                ? \"0\" + (formDataInicio.getMonth() + 1)\r\n                                : formDataInicio.getMonth() + 1\r\n                        }-${\r\n                            formDataInicio.getDate() < 10\r\n                                ? \"0\" + formDataInicio.getDate()\r\n                                : formDataInicio.getDate()\r\n                        }`,\r\n                        salario: formSalario,\r\n                        senha_hash: formSenha,\r\n                        crm: formCrm,\r\n                        especialidade: formEspecialidade,\r\n                        isMedico: isMedico,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                case \"paciente\":\r\n                    await post(\"paciente\", {\r\n                        bairro: formBairro,\r\n                        cep: formCep,\r\n                        cidade: formCidade,\r\n                        email: formEmail,\r\n                        estado: formEstado,\r\n                        logradouro: formLogradouro,\r\n                        nome: formNome,\r\n                        telefone: formTelefone,\r\n                        peso: formPeso,\r\n                        altura: formAltura.replace(\",\", \".\"),\r\n                        tipo_sanguineo: formTipoSanguineo,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                case \"endereco\":\r\n                    await post(\"endereco\", {\r\n                        bairro: formBairro,\r\n                        cep: formCep,\r\n                        cidade: formCidade,\r\n                        estado: formEstado,\r\n                        logradouro: formLogradouro,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                case \"consulta\":\r\n                    await post(\"agenda\", {\r\n                        data: `${formDataConsulta.getFullYear()}-${\r\n                            formDataConsulta.getMonth() + 1 < 10\r\n                                ? \"0\" + (formDataConsulta.getMonth() + 1)\r\n                                : formDataConsulta.getMonth() + 1\r\n                        }-${\r\n                            formDataConsulta.getDate() < 10\r\n                                ? \"0\" + formDataConsulta.getDate()\r\n                                : formDataConsulta.getDate()\r\n                        }`,\r\n                        hora: formHoraConsulta,\r\n                        nome: formNome,\r\n                        email: formEmail,\r\n                        telefone: formTelefone,\r\n                        codigomedico: formMedico,\r\n                    })\r\n                        .then(() => setSuccessSnackBar())\r\n                        .catch((error) => {\r\n                            setErrorSnackbar();\r\n                        });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } catch (ex) {\r\n            setErrorSnackbar();\r\n        }\r\n    };\r\n\r\n    const handleSetFormCep = (value) => {\r\n        setFormCep(value);\r\n        if (value && value.replace(\"-\", \"\").length === 8) {\r\n            get(`endereco/${value.replace(\"-\", \"\")}`).then((result) => {\r\n                if (result && result[0]) {\r\n                    console.log(result);\r\n                    setFormLogradouro(result[0].logradouro);\r\n                    setFormBairro(result[0].bairro);\r\n                    setFormCidade(result[0].cidade);\r\n                    setFormEstado(result[0].estado);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSetIsMedico = (value) => {\r\n        setIsMedico(value);\r\n    };\r\n\r\n    const handleSetFormSelectEspecialidade = (value) => {\r\n        setFormSelectEspecialidade(value);\r\n        get(\"especialidade/medicos\", { especialidade: value }).then(\r\n            (result) => {\r\n                setOptionsMedico(result);\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleSetFormDataConsulta = (value) => {\r\n        setFormDataConsulta(value);\r\n        get(\"agenda/horarios\", {\r\n            codigomedico: formMedico,\r\n            data: `${value.getFullYear()}-${\r\n                value.getMonth() + 1 < 10\r\n                    ? \"0\" + (value.getMonth() + 1)\r\n                    : value.getMonth() + 1\r\n            }-${\r\n                value.getDate() < 10 ? \"0\" + value.getDate() : value.getDate()\r\n            }`,\r\n        }).then((result) =>\r\n            setOptionsHour(result.map((value) => value.slice(0, 5)))\r\n        );\r\n        // busca no back as options\r\n    };\r\n\r\n    // states\r\n    const [formMedico, setFormMedico] = useState(\"\");\r\n    const [formSelectEspecialidade, setFormSelectEspecialidade] = useState(\"\");\r\n    const [formDataConsulta, setFormDataConsulta] = useState(new Date());\r\n    const [formHoraConsulta, setFormHoraConsulta] = useState(\"\");\r\n    const [formNome, setFormNome] = useState(\"\");\r\n    const [formEmail, setFormEmail] = useState(\"\");\r\n    const [formTelefone, setFormTelefone] = useState(\"\");\r\n    const [formCep, setFormCep] = useState(\"\");\r\n    const [formLogradouro, setFormLogradouro] = useState(\"\");\r\n    const [formBairro, setFormBairro] = useState(\"\");\r\n    const [formCidade, setFormCidade] = useState(\"\");\r\n    const [formEstado, setFormEstado] = useState(\"\");\r\n    const [formDataInicio, setFormDataInicio] = useState(new Date());\r\n    const [formSalario, setFormSalario] = useState(\"\");\r\n    const [formSenha, setFormSenha] = useState(\"\");\r\n    const [formEspecialidade, setFormEspecialidade] = useState(\"\");\r\n    const [formCrm, setFormCrm] = useState(\"\");\r\n    const [formPeso, setFormPeso] = useState(\"\");\r\n    const [formAltura, setFormAltura] = useState(\"\");\r\n    const [formTipoSanguineo, setFormTipoSanguineo] = useState(\"\");\r\n    const [optionsEspecialidade, setOptionsEspecialidade] = useState([]);\r\n    const [optionsMedico, setOptionsMedico] = useState([]);\r\n    const [optionsHour, setOptionsHour] = useState([]);\r\n    const [isMedico, setIsMedico] = useState(false);\r\n\r\n    useEffect(() => {\r\n        get(\"especialidade\").then((result) => setOptionsEspecialidade(result));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className={formStyle.default}>\r\n                <div className={formStyle.box}>\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControl className={formStyle.item}>\r\n                                <InputLabel\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className={formStyle.item}\r\n                                >\r\n                                    Especialidade\r\n                                </InputLabel>\r\n                                <Select\r\n                                    className={formStyle.item}\r\n                                    label=\"Especialidade\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={formSelectEspecialidade}\r\n                                    onChange={(ev) => {\r\n                                        handleSetFormSelectEspecialidade(\r\n                                            ev.target.value\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    {optionsEspecialidade.map((option) => (\r\n                                        <MenuItem\r\n                                            id={option.especialidade}\r\n                                            value={option.especialidade}\r\n                                        >\r\n                                            {option.especialidade}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControl className={formStyle.item}>\r\n                                <InputLabel className={formStyle.item}>\r\n                                    Médico\r\n                                </InputLabel>\r\n                                <Select\r\n                                    className={formStyle.item}\r\n                                    label=\"Medico\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={formMedico}\r\n                                    onChange={(ev) => {\r\n                                        setFormMedico(ev.target.value);\r\n                                    }}\r\n                                >\r\n                                    {optionsMedico.map((option) => (\r\n                                        <MenuItem\r\n                                            id={option.nome}\r\n                                            value={option.codigo}\r\n                                        >\r\n                                            {option.nome}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                style={{\r\n                                    marginBottom: \"45px\",\r\n                                    marginLeft: \"20px\",\r\n                                }}\r\n                                disableToolbar\r\n                                variant=\"outlined\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Data da Consulta\"\r\n                                value={formDataConsulta}\r\n                                onChange={(ev) => {\r\n                                    handleSetFormDataConsulta(ev);\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    )}\r\n                    {[\"consulta\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControl className={formStyle.item}>\r\n                                <InputLabel\r\n                                    style={{ marginLeft: \"15px\" }}\r\n                                    className={formStyle.item}\r\n                                >\r\n                                    Hora\r\n                                </InputLabel>\r\n                                <Select\r\n                                    className={formStyle.item}\r\n                                    label=\"Hora\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={formHoraConsulta}\r\n                                    onChange={(ev) => {\r\n                                        setFormHoraConsulta(ev.target.value);\r\n                                    }}\r\n                                >\r\n                                    {optionsHour.map((option) => (\r\n                                        <MenuItem id={option} value={option}>\r\n                                            {option}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Nome\"\r\n                                variant=\"outlined\"\r\n                                value={formNome}\r\n                                onChange={(ev) => {\r\n                                    setFormNome(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                                value={formEmail}\r\n                                onChange={(ev) => {\r\n                                    setFormEmail(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"consulta\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Telefone\"\r\n                                variant=\"outlined\"\r\n                                value={formTelefone}\r\n                                onChange={(ev) => {\r\n                                    setFormTelefone(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"CEP\"\r\n                                variant=\"outlined\"\r\n                                value={formCep}\r\n                                onChange={(ev) => {\r\n                                    handleSetFormCep(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Logradouro\"\r\n                                variant=\"outlined\"\r\n                                value={formLogradouro}\r\n                                onChange={(ev) => {\r\n                                    setFormLogradouro(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Bairro\"\r\n                                variant=\"outlined\"\r\n                                value={formBairro}\r\n                                onChange={(ev) => {\r\n                                    setFormBairro(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Cidade\"\r\n                                variant=\"outlined\"\r\n                                value={formCidade}\r\n                                onChange={(ev) => {\r\n                                    setFormCidade(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\", \"paciente\", \"endereco\"].includes(\r\n                        type\r\n                    ) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Estado\"\r\n                                variant=\"outlined\"\r\n                                value={formEstado}\r\n                                onChange={(ev) => {\r\n                                    setFormEstado(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                                className={formStyle.item}\r\n                                disableToolbar\r\n                                variant=\"outlined\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"date-picker-inline\"\r\n                                label=\"Data Inicio\"\r\n                                value={formDataInicio}\r\n                                onChange={(ev) => {\r\n                                    setFormDataInicio(ev);\r\n                                }}\r\n                            />\r\n                        </MuiPickersUtilsProvider>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Salário\"\r\n                                variant=\"outlined\"\r\n                                value={formSalario}\r\n                                onChange={(ev) => {\r\n                                    setFormSalario(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                type=\"password\"\r\n                                label=\"Senha\"\r\n                                variant=\"outlined\"\r\n                                value={formSenha}\r\n                                onChange={(ev) => {\r\n                                    setFormSenha(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && isMedico && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Especialidade\"\r\n                                variant=\"outlined\"\r\n                                value={formEspecialidade}\r\n                                onChange={(ev) => {\r\n                                    setFormEspecialidade(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && isMedico && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"CRM\"\r\n                                variant=\"outlined\"\r\n                                value={formCrm}\r\n                                onChange={(ev) => {\r\n                                    setFormCrm(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"paciente\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Peso\"\r\n                                variant=\"outlined\"\r\n                                value={formPeso}\r\n                                onChange={(ev) => {\r\n                                    setFormPeso(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"paciente\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Altura\"\r\n                                variant=\"outlined\"\r\n                                value={formAltura}\r\n                                onChange={(ev) => {\r\n                                    setFormAltura(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"paciente\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <TextField\r\n                                className={formStyle.item}\r\n                                id=\"outlined-basic\"\r\n                                label=\"Tipo sanguíneo\"\r\n                                variant=\"outlined\"\r\n                                value={formTipoSanguineo}\r\n                                onChange={(ev) => {\r\n                                    setFormTipoSanguineo(ev.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {[\"funcionario\", \"medico\"].includes(type) && (\r\n                        <div className={formStyle.item}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={isMedico}\r\n                                        onChange={() =>\r\n                                            handleSetIsMedico(!isMedico)\r\n                                        }\r\n                                        name=\"checkedB\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Médico\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className={formStyle.buttons}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        style={{ marginRight: \"30px\" }}\r\n                        onClick={() => {}}\r\n                    >\r\n                        Limpar\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={handleSendClick}>\r\n                        Enviar\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <MySnackBar\r\n                open={isOpenSnackBar}\r\n                message={snackBarMessage}\r\n                severity={severitySnackBar}\r\n                setClose={setIsOpenSnackBar}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GenericForm;\r\n"]},"metadata":{},"sourceType":"module"}